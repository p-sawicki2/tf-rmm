{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "42663abc_b00c8abb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-03-02T16:02:08Z",
      "side": 1,
      "message": "Please, review my answers and I will rework the patch afterwards",
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38899963_523c7124",
        "filename": "lib/xlat/include/xlat_tables.h",
        "patchSetId": 7
      },
      "lineNbr": 78,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-02T14:06:36Z",
      "side": 1,
      "message": "nit: \"absolute\"",
      "range": {
        "startLine": 78,
        "startChar": 26,
        "endLine": 78,
        "endChar": 36
      },
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30fbc523_25bf5c97",
        "filename": "lib/xlat/include/xlat_tables.h",
        "patchSetId": 7
      },
      "lineNbr": 78,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-03-02T17:11:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "38899963_523c7124",
      "range": {
        "startLine": 78,
        "startChar": 26,
        "endLine": 78,
        "endChar": 36
      },
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f347603_92b38972",
        "filename": "lib/xlat/include/xlat_tables.h",
        "patchSetId": 7
      },
      "lineNbr": 87,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-02T14:06:36Z",
      "side": 1,
      "message": "Suggest :\n\n * TRANSIENT_DESC can be used either as a bit mask or as as absolute value. \n * The absolute value is used to mark an invalid transient TTE and the mask\n * is used to make a valid TTE as transient.",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 87,
        "endChar": 19
      },
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4f9843a_a74dfd3d",
        "filename": "lib/xlat/include/xlat_tables.h",
        "patchSetId": 7
      },
      "lineNbr": 87,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-03-02T17:11:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f347603_92b38972",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 87,
        "endChar": 19
      },
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ffa3b5e_518bd5a1",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 109,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-02T14:06:36Z",
      "side": 1,
      "message": "transient invalid...\n\nalso rename variable names accordingly.",
      "range": {
        "startLine": 109,
        "startChar": 9,
        "endLine": 109,
        "endChar": 19
      },
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d23c9f1d_8430832c",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 109,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-03-02T16:02:08Z",
      "side": 1,
      "message": "I\u0027m counting all transient descriptors (valid and invalid) as transient here.",
      "parentUuid": "1ffa3b5e_518bd5a1",
      "range": {
        "startLine": 109,
        "startChar": 9,
        "endLine": 109,
        "endChar": 19
      },
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a180300_59f87e91",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 109,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-03-02T17:11:35Z",
      "side": 1,
      "message": "Fixed as discussed",
      "parentUuid": "d23c9f1d_8430832c",
      "range": {
        "startLine": 109,
        "startChar": 9,
        "endLine": 109,
        "endChar": 19
      },
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e0b0ee8_71d4de51",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 158,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-02T14:06:36Z",
      "side": 1,
      "message": "With the new change, I think transient is a parallel property. A valid descriptor can also be transient.\n\nSo this should be\n\nis_transient_inv \u003d (desc \u003d\u003d TRANSIENT_DESC);",
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "269c38d0_6e20f172",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 158,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-03-02T16:02:08Z",
      "side": 1,
      "message": "Yes, in order to print logs, I only take into account if the tte is transient or not, regardless of whether it is valid or not and I don\u0027t print any other information (such as the PA if the tte is valid). The logs are usually printed right after the tables are created, during initialization. At that point, the transient entries haven\u0027t been mapped anyway so I can ignore if the tte is valid or not. I am only interested on the transient property.",
      "parentUuid": "5e0b0ee8_71d4de51",
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bff2572a_902299bd",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 158,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-03-02T17:11:35Z",
      "side": 1,
      "message": "Fixed as discussed",
      "parentUuid": "269c38d0_6e20f172",
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7c9f6ab_d0bc62c9",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 209,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-02T14:06:36Z",
      "side": 1,
      "message": "should we call out transient mapped in the print\n\nif (desc \u0026 TRANSIENT_DESC)\n      VERSBOSE(\" Transient\");",
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "238f9767_8c0699dc",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 209,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-03-02T16:02:08Z",
      "side": 1,
      "message": "See my previous comment. I only take into account if the tte is transient or not regardless of its validity. At the time the logs are printed, during initialization, there are no transient mappings done anyway.",
      "parentUuid": "b7c9f6ab_d0bc62c9",
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b5331da_7e7a5d80",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 209,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-03-02T17:11:35Z",
      "side": 1,
      "message": "Fixed as discussed",
      "parentUuid": "238f9767_8c0699dc",
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f510e8f_05e3c2d7",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 316,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-02T14:06:36Z",
      "side": 1,
      "message": "Is this correct ?\n\nI am not sure whether this helper needs to be restricted to Transient tte\u0027s",
      "range": {
        "startLine": 316,
        "startChar": 38,
        "endLine": 316,
        "endChar": 60
      },
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "faa1fcc6_0f162e0e",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 316,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-03-02T16:02:08Z",
      "side": 1,
      "message": "Yes, it is correct. An unmapped transient descriptor will be an invalid descriptor and therefore desc_type will not be of BLOCK_DESC or PAGE_DESC type.\n\nAs specified on the comments on TRANSIENT_DESC definition (https://review.trustedfirmware.org/c/TF-RMM/tf-rmm/+/19529/7/lib/xlat/include/xlat_tables.h#83), this can be used either as a bit mask or an absolute value.\n\nOriginally I thought about restricting it to only transient descriptors, but later I thought that it would be more consistent to have the library API as orthogonal as possible, that\u0027s why I didn\u0027t restrict it.",
      "parentUuid": "9f510e8f_05e3c2d7",
      "range": {
        "startLine": 316,
        "startChar": 38,
        "endLine": 316,
        "endChar": 60
      },
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79e54382_9b4edd03",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 316,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-03T00:36:18Z",
      "side": 1,
      "message": "If we get an INVALID_DESC here (0x0) , this check will fail (because INVALID_DESC !\u003d TRANSIENT_DESC) ?\n\nIf you dont want to restrict this to transient desc, then the check should be :\n\nif (desc_type !\u003d TABLE_DESC) {\n\t\t\tif (((desc_type \u003d\u003d BLOCK_DESC) ||\n\t\t\t    (((desc_type \u003d\u003d PAGE_DESC) || (desc \u003d\u003d TRANSIENT_DESC) || (desc \u003d\u003d INVALID_DESC) {\n\n\n\n\nwhich can be reduced as \n\n\nif (desc_type !\u003d TABLE_DESC) {\n\t\t\tif (((desc_type \u003d\u003d BLOCK_DESC) ||\n\t\t\t    (((desc_type \u003d\u003d PAGE_DESC) || (desc_type \u003d\u003d INVALID_DESC) {",
      "parentUuid": "faa1fcc6_0f162e0e",
      "range": {
        "startLine": 316,
        "startChar": 38,
        "endLine": 316,
        "endChar": 60
      },
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70e29daa_411d9a28",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 316,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-03-03T11:42:34Z",
      "side": 1,
      "message": "WRT to your first question: Yes, the check will fail as INVALID_DESC \u003d\u003d 0x0 and TRANSIENT_DESC \u003d\u003d (1ULL \u003c\u003c 55)\n\nWith your change, this function would return invalid descriptors, which we want to avoid: The only descriptors considered as valid are Transient-Invalid (tte \u003d\u003d (1ULL \u003c\u003c 55)), block and page descriptors (the last two ones can also be transient if bit 55 \u003d\u003d 1).\n\nInvalid descriptors (0x0) are descriptors for addresses not configured in the mmap regions and therefore we should not return those. There are returned in the current implementation as we didn\u0027t make any distinction between transient and invalid, which is what this patch fixes.",
      "parentUuid": "79e54382_9b4edd03",
      "range": {
        "startLine": 316,
        "startChar": 38,
        "endLine": 316,
        "endChar": 60
      },
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0149724f_132babf7",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 341,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-02T14:06:36Z",
      "side": 1,
      "message": "\"...at the given VA.\"",
      "range": {
        "startLine": 341,
        "startChar": 3,
        "endLine": 341,
        "endChar": 15
      },
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "416c0116_c2e07de5",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 341,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-03-02T17:11:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0149724f_132babf7",
      "range": {
        "startLine": 341,
        "startChar": 3,
        "endLine": 341,
        "endChar": 15
      },
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa94278f_2699f20a",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 359,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-02T14:06:36Z",
      "side": 1,
      "message": "I think these are programming errors and components can assert errors which are not expected to happen if invoked correctly.",
      "range": {
        "startLine": 356,
        "startChar": 0,
        "endLine": 359,
        "endChar": 0
      },
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "450040be_7edfb366",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 359,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-03-02T16:02:08Z",
      "side": 1,
      "message": "xlat_unmap_memory_page() is a public API, so I think it should return an error code here and let the caller decide which action to take.",
      "parentUuid": "fa94278f_2699f20a",
      "range": {
        "startLine": 356,
        "startChar": 0,
        "endLine": 359,
        "endChar": 0
      },
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abffc95a_32d27966",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 359,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-03-02T17:11:35Z",
      "side": 1,
      "message": "Fixed as discussed",
      "parentUuid": "450040be_7edfb366",
      "range": {
        "startLine": 356,
        "startChar": 0,
        "endLine": 359,
        "endChar": 0
      },
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd331b56_05b19065",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 383,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-02T14:06:36Z",
      "side": 1,
      "message": "\"...at the given VA\".",
      "range": {
        "startLine": 383,
        "startChar": 3,
        "endLine": 383,
        "endChar": 15
      },
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80050c2e_39738083",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 383,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-03-02T17:11:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd331b56_05b19065",
      "range": {
        "startLine": 383,
        "startChar": 3,
        "endLine": 383,
        "endChar": 15
      },
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c5ae3d2_ea7c25a3",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 411,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-02T14:06:36Z",
      "side": 1,
      "message": "should this be :\n\nif ((xlat_read_tte(tte_ptr) \u003d\u003d TRANSIENT_DESC) {",
      "range": {
        "startLine": 411,
        "startChar": 1,
        "endLine": 411,
        "endChar": 57
      },
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b10f2a9_aeb2fa12",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 411,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-03-02T16:02:08Z",
      "side": 1,
      "message": "Yes. This is a bug. This operation should be restricted to invalid transient entries only.",
      "parentUuid": "8c5ae3d2_ea7c25a3",
      "range": {
        "startLine": 411,
        "startChar": 1,
        "endLine": 411,
        "endChar": 57
      },
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78307bb9_61bd90f2",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 7
      },
      "lineNbr": 411,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-03-02T17:11:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b10f2a9_aeb2fa12",
      "range": {
        "startLine": 411,
        "startChar": 1,
        "endLine": 411,
        "endChar": 57
      },
      "revId": "39ec59f50a8a018636eace9096f6df62a00fca18",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}