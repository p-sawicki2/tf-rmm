{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "28daabd0_6d469765",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-10-05T14:56:25Z",
      "side": 1,
      "message": "The unit tests fail due to assert changes.",
      "revId": "15cb8e1e149baeab69b283dcfc32b2e968bbf507",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "64113bdd_03a44e51",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-10-06T12:07:02Z",
      "side": 1,
      "message": "This change will break the unittests. They need to be updated and added testcases for the new assertions",
      "revId": "15cb8e1e149baeab69b283dcfc32b2e968bbf507",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1eca3551_16360a54",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-10-06T15:50:51Z",
      "side": 1,
      "message": "Reviewing this patch again, I don\u0027t understand why we introduce asserts instead of just checking the MMU status and returning an error code if the operation cannot be performed (as done in all the xlat library APIs). I think that most (maybe not all but at least most of them) of the asserts here can just return an error, to make the APIs more consistent.",
      "revId": "15cb8e1e149baeab69b283dcfc32b2e968bbf507",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf3f0f8a_7f23a916",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-10-09T08:55:17Z",
      "side": 1,
      "message": "I wanted to unify the check for MMU enable checks in xlat table and other places in code. It seems this is enough to be an assert as this is a development issue due to wrong caller state. So an assert would satify the need to ensure that the API is invoked correctly.\n\nI didnt time to fix up the unit tests, but I thought I put this patch out there for some feedack.",
      "parentUuid": "1eca3551_16360a54",
      "revId": "15cb8e1e149baeab69b283dcfc32b2e968bbf507",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e031bd51_2f5d8264",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-10-09T14:50:22Z",
      "side": 1,
      "message": "Yes, but if I\u0027m not wrong, the consensus with regards assertions was that libraries should not assert and instead they should return error codes and let the caller decide whether to assert or to take any other action upon incorrect state.\n\nasserting only on the check of the MMU enabled and not doing it on the other checks feels arbitrary and inconsistent to me.",
      "parentUuid": "cf3f0f8a_7f23a916",
      "revId": "15cb8e1e149baeab69b283dcfc32b2e968bbf507",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a3b26ac_9408492d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-11-07T14:11:28Z",
      "side": 1,
      "message": "When looking the XLAT library, it\u0027s noticeable that assertions are used quite frequently without returning the error code. Typically, assertions are employed to signify programming errors and ensure that pre-conditions are met and never violated during runtime (alerting you to errors that must never occur in the first place). Therefore, it might not be necessary to retain these checks in the release build. However, this patch appears to address programming errors, justifying the use of assertions.\n\nI think we have the flexibility to include as many assertions as desired, as it doesn\u0027t affect the release build and is intended solely for development purposes, and it is a programmer\u0027s choice.\n\nAny thoughts?",
      "parentUuid": "e031bd51_2f5d8264",
      "revId": "15cb8e1e149baeab69b283dcfc32b2e968bbf507",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}