{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "71725f16_427afd14",
        "filename": "lib/attestation/src/attestation_utils.c",
        "patchSetId": 16
      },
      "lineNbr": 98,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-11T10:58:52Z",
      "side": 1,
      "message": "SIMD_FPU_ALLOW() here ?",
      "revId": "fcdfc67ce5937f0e5e6f6640b5a40449b9890a1a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82601f5a_6f55d7a2",
        "filename": "lib/attestation/src/attestation_utils.c",
        "patchSetId": 16
      },
      "lineNbr": 98,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2023-05-12T16:20:00Z",
      "side": 1,
      "message": "mbedtls_memory_buffer_alloc_init() implemented in RMM doesn\u0027t uses FPU. And this function is not export to mbedtls through platform hooks. So its safe to be out of SIMD_FPU_ALLOW\n\nRemoving SIMD_FPU_ALLOW for this function makes REC_ENTER RMI call not to depend on FPU.\n\nSame applies for attestation_heap_reinit_pe() called from SMC_RSI_ATTEST_TOKEN_INIT. So I will remove SIMD_FPU_ALLOW at #130 as well.",
      "parentUuid": "71725f16_427afd14",
      "revId": "fcdfc67ce5937f0e5e6f6640b5a40449b9890a1a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d62e7ce_c397d892",
        "filename": "runtime/core/exit.c",
        "patchSetId": 16
      },
      "lineNbr": 403,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2023-05-12T09:25:31Z",
      "side": 1,
      "message": "Is this variable necessary?\n\nThe value is only set to true if rsi_handler_needs_fpu(function_id) \u003d\u003d true and !rec_is_simd_allowed(rec). \n\nThe same condition is checked at restore, so if the logic at restore is rewritten with if/else, then the variable could be omitted",
      "range": {
        "startLine": 403,
        "startChar": 6,
        "endLine": 403,
        "endChar": 27
      },
      "revId": "fcdfc67ce5937f0e5e6f6640b5a40449b9890a1a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d12a21fb_2e7f230c",
        "filename": "runtime/core/exit.c",
        "patchSetId": 16
      },
      "lineNbr": 403,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2023-05-12T16:20:00Z",
      "side": 1,
      "message": "Done\nright, removed this flag.",
      "parentUuid": "2d62e7ce_c397d892",
      "range": {
        "startLine": 403,
        "startChar": 6,
        "endLine": 403,
        "endChar": 27
      },
      "revId": "fcdfc67ce5937f0e5e6f6640b5a40449b9890a1a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67e970d0_078a5782",
        "filename": "runtime/core/handler.c",
        "patchSetId": 16
      },
      "lineNbr": 229,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2023-05-12T09:25:31Z",
      "side": 1,
      "message": "Could be \u0027restore_ns_simd_state\u0027 to be analogue to the RSI implementation (or the other way around)",
      "range": {
        "startLine": 229,
        "startChar": 6,
        "endLine": 229,
        "endChar": 17
      },
      "revId": "fcdfc67ce5937f0e5e6f6640b5a40449b9890a1a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4c1b803_3c7ceeed",
        "filename": "runtime/core/handler.c",
        "patchSetId": 16
      },
      "lineNbr": 229,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2023-05-12T16:20:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "67e970d0_078a5782",
      "range": {
        "startLine": 229,
        "startChar": 6,
        "endLine": 229,
        "endChar": 17
      },
      "revId": "fcdfc67ce5937f0e5e6f6640b5a40449b9890a1a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}