{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "152d50c2_9733d053",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T15:45:47Z",
      "side": 1,
      "message": "The ARM Arm says the TLBI range operations are affected by LPA2. I did not confirm whether the regular TLBIs are affected or not.",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "120cce8f_e53a9b8d",
        "filename": "lib/arch/include/arch.h",
        "patchSetId": 23
      },
      "lineNbr": 257,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T13:37:19Z",
      "side": 1,
      "message": "Need to name this with LPA2 in mind.\n\nTTBRx_EL2_BADDR_MSB_LPA2_SHIFT\n\nAlso need a comment\nBits[51:48] of the translation table base address bits are in register bits[5:2].",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21b924d3_0c05c5b0",
        "filename": "lib/arch/include/arch.h",
        "patchSetId": 23
      },
      "lineNbr": 257,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "120cce8f_e53a9b8d",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "710d7295_07e11448",
        "filename": "lib/arch/include/arch.h",
        "patchSetId": 23
      },
      "lineNbr": 258,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T13:37:19Z",
      "side": 1,
      "message": "include \"_LPA2_\" in the name of the macro names below.",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb989bc1_ff9d6ed1",
        "filename": "lib/arch/include/arch.h",
        "patchSetId": 23
      },
      "lineNbr": 258,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "710d7295_07e11448",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b4abf9d_a9f33b0e",
        "filename": "lib/arch/include/arch.h",
        "patchSetId": 23
      },
      "lineNbr": 259,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T13:37:19Z",
      "side": 1,
      "message": "EL2_XLAT_BADDR_MSB_LPA2_SHIFT\nEL2_XLAT_BADDR_MSB_LPA2_WIDTH",
      "range": {
        "startLine": 259,
        "startChar": 8,
        "endLine": 259,
        "endChar": 29
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "592a9540_d21533e8",
        "filename": "lib/arch/include/arch.h",
        "patchSetId": 23
      },
      "lineNbr": 259,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b4abf9d_a9f33b0e",
      "range": {
        "startLine": 259,
        "startChar": 8,
        "endLine": 259,
        "endChar": 29
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4302d81_44a8721c",
        "filename": "lib/s2tt/include/s2tt.h",
        "patchSetId": 23
      },
      "lineNbr": 34,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T13:37:19Z",
      "side": 1,
      "message": "\"enable_lpa2\" ?",
      "range": {
        "startLine": 34,
        "startChar": 6,
        "endLine": 34,
        "endChar": 14
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45f179c6_00825bc4",
        "filename": "lib/s2tt/include/s2tt.h",
        "patchSetId": 23
      },
      "lineNbr": 34,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-21T20:17:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4302d81_44a8721c",
      "range": {
        "startLine": 34,
        "startChar": 6,
        "endLine": 34,
        "endChar": 14
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3792c15_6821f822",
        "filename": "lib/s2tt/include/s2tt.h",
        "patchSetId": 23
      },
      "lineNbr": 57,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T13:37:19Z",
      "side": 1,
      "message": "nit: align",
      "range": {
        "startLine": 57,
        "startChar": 23,
        "endLine": 57,
        "endChar": 24
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6377d0d0_5565e0f0",
        "filename": "lib/s2tt/include/s2tt.h",
        "patchSetId": 23
      },
      "lineNbr": 57,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-21T20:17:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3792c15_6821f822",
      "range": {
        "startLine": 57,
        "startChar": 23,
        "endLine": 57,
        "endChar": 24
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80863248_8e8b72f5",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 19,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T13:37:19Z",
      "side": 1,
      "message": "\u0026\u0026 \u003e\u003d S2TT_LEVEL_LM1 ?",
      "range": {
        "startLine": 19,
        "startChar": 33,
        "endLine": 19,
        "endChar": 34
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9914e9e_4220f6b9",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 19,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "That was a redundant check that I detected and removed when I implemented the unittests for this library. However the unittests are far behind and it will take a while to have them reworked. I can add the check again, but then I will probably have to remove it again when I add the unittests.\n\nAlso, the level higher boundary is always checked by the callers.\n\nPlus we are removing this call anyway",
      "parentUuid": "80863248_8e8b72f5",
      "range": {
        "startLine": 19,
        "startChar": 33,
        "endLine": 19,
        "endChar": 34
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "380af68c_51f8372a",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 19,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-21T16:24:35Z",
      "side": 1,
      "message": "as discussed, we can check the lower bound as well.",
      "parentUuid": "d9914e9e_4220f6b9",
      "range": {
        "startLine": 19,
        "startChar": 33,
        "endLine": 19,
        "endChar": 34
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b26165a3_f5eef180",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 19,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-21T20:17:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "380af68c_51f8372a",
      "range": {
        "startLine": 19,
        "startChar": 33,
        "endLine": 19,
        "endChar": 34
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1939a7dd_b1277247",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 109,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T13:37:19Z",
      "side": 1,
      "message": "cannot be empty anymore as it has PA.\n\nSuggest the following, implement a macro (or helper) pa_to_s2tte() which will format PA in S2TTE.\n\nThe caller can then create empty S2tte\n\nunsigned long s2tte \u003d pa_to_s2tte(pa, lpa2);",
      "range": {
        "startLine": 109,
        "startChar": 14,
        "endLine": 109,
        "endChar": 20
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39775de5_85f4131c",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 109,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "The macro would have to check whether LPA2 is enabled or not, so I think in that case a function would be more appropriate. I can rename it if that would be more appropriate",
      "parentUuid": "1939a7dd_b1277247",
      "range": {
        "startLine": 109,
        "startChar": 14,
        "endLine": 109,
        "endChar": 20
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c515ba20_c445d143",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 114,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T13:37:19Z",
      "side": 1,
      "message": "I think this needs to be more precise when copying to tte with LPA2 disabled.\n\n[47:0] to tte.\n\nWith LPA2, bits [49:0] can be copied with INPLACE and EXTRACT for bits [51:50]",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b10cde2_3f944277",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 114,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "I\u0027m not sure if I understand this comment",
      "parentUuid": "c515ba20_c445d143",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd36b7ba_077b59e4",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 114,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-21T16:24:35Z",
      "side": 1,
      "message": "We need to do:\n\npa \u0026\u003d ~MASK(S2TTE_MSB)",
      "parentUuid": "5b10cde2_3f944277",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5feaec39_4aa47e63",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 114,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-21T20:17:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd36b7ba_077b59e4",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc3965d9_b6b724f3",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 170,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T13:37:19Z",
      "side": 1,
      "message": "Writing this as \n(level \u003c S2TT_MIN_STARTING_LEVEL) ? S2TTE_STRIDE : S2TTE_STRIDE_LM1;\n\nresult in more efficient code generation ( 1 less instruction in Debug build).",
      "range": {
        "startLine": 169,
        "startChar": 30,
        "endLine": 170,
        "endChar": 37
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29f42e49_7d8b84fe",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 170,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "In this case the assignation is inverted, should be \n\n(level \u003c S2TT_MIN_STARTING_LEVEL) \u003e S2TTE_STRIDE_LM1 : S2TTE_STRIDE",
      "parentUuid": "bc3965d9_b6b724f3",
      "range": {
        "startLine": 169,
        "startChar": 30,
        "endLine": 170,
        "endChar": 37
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "701fb368_2941710d",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 404,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T13:37:19Z",
      "side": 1,
      "message": "pa_to_s2tte()",
      "range": {
        "startLine": 404,
        "startChar": 21,
        "endLine": 404,
        "endChar": 37
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6f1a867_8f174ed8",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 404,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "701fb368_2941710d",
      "range": {
        "startLine": 404,
        "startChar": 21,
        "endLine": 404,
        "endChar": 37
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d19a1d42_3defeec1",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 520,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T13:37:19Z",
      "side": 1,
      "message": "As discussed , we can have 2 helpers:\n\n1. s2tte_lvl_mask -\u003e takes {lvl, lpa2} as argument and returns the mask to be used to S2TTE\n2. s2tte_to_pa() -\u003e Takes {s2tte, lvl. lpa2} as arguments, invokes s2tte_lvl_mask, extracts MSB and puts it INPLACE.  (returns the formatted address [51:0] to caller).\n\nThe addr_level_mask() needs to be removed and replaced with these 2 variants.",
      "range": {
        "startLine": 519,
        "startChar": 1,
        "endLine": 520,
        "endChar": 30
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e577d3c_0704b537",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 520,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d19a1d42_3defeec1",
      "range": {
        "startLine": 519,
        "startChar": 1,
        "endLine": 520,
        "endChar": 30
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc8e0415_6b4398d7",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 560,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T13:37:19Z",
      "side": 1,
      "message": "If it is s2tte, this might have a subtle bug for bits [51:50]. See suggestion to remove this helper.",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "389dfd11_2659e145",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 560,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc8e0415_6b4398d7",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "facfa2a1_4dfc7e31",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 1022,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T13:37:19Z",
      "side": 1,
      "message": "s2tte_to_pa() can be used here.",
      "range": {
        "startLine": 1022,
        "startChar": 7,
        "endLine": 1022,
        "endChar": 22
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e6c4a59_a1009bf3",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 1022,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facfa2a1_4dfc7e31",
      "range": {
        "startLine": 1022,
        "startChar": 7,
        "endLine": 1022,
        "endChar": 22
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcdba3c4_cff60732",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 1036,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T13:37:19Z",
      "side": 1,
      "message": "assert(level \u003c\u003d S2TT_PAGE_LEVEL \u0026\u0026 level \u003e\u003d S2TT_LM1);\n\n\tint levels \u003d (int)(S2TT_PAGE_LEVEL - level);\n\tunsigned int lsb \u003d (levels * S2TTE_STRIDE) + GRANULE_SHIFT;\n\tunsigned int s2tte_oa_bits \u003d (lpa2 \u003d\u003d true) ? S2TTE_OA_BITS_LPA2 :\n\t\t\t\t\t\t      S2TTE_OA_BITS;\n\n\treturn addr \u0026 BIT_MASK_ULL((s2tte_oa_bits - 1U), lsb);",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b907bce7_db04ad9d",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 1036,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "See my comment below",
      "parentUuid": "bcdba3c4_cff60732",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abe3dd2d_45e781fb",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 1041,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T13:37:19Z",
      "side": 1,
      "message": "we need to check for both lsb and msb.\n\nassert(level \u003c\u003d S2TT_PAGE_LEVEL \u0026\u0026 level \u003e\u003d S2TT_LM1);\n\nint levels \u003d (int)(S2TT_PAGE_LEVEL - level);\nunsigned int lsb \u003d (levels * S2TTE_STRIDE) + GRANULE_SHIFT;\nunsigned int s2tte_oa_bits \u003d (lpa2 \u003d\u003d true) ? S2TTE_OA_BITS_LPA2 :\n\t\t\t\t\t\t      S2TTE_OA_BITS;\n\nreturn (addr \u003d\u003d (addr \u0026 BIT_MASK_ULL((s2tte_oa_bits - 1U), lsb)));",
      "range": {
        "startLine": 1041,
        "startChar": 14,
        "endLine": 1041,
        "endChar": 18
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25c0c4fa_47049c25",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 1041,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "We cannot compare directly with S2TT_LM1 as that would be invalid if LPA2 is disabled, hence I need to calculate the valid min_starting_level after validating s2_ctx and then after that I can call assert (line 1045, which I wanted to be along to 1044).\n\nAlso, wouldn\u0027t the current implementation be more efficient?\n\n* Line 1042 is a bit manipulation and arithmetic operation as opposed to a check and branch ((lpa2 \u003d\u003d true) ? S2TTE_OA_BITS_LPA2 :\nS2TTE_OA_BITS)\n* return ((addr \u0026 mask) \u003d\u003d 0UL) would be more efficient than return addr \u0026 BIT_MASK_ULL((s2tte_oa_bits - 1U), lsb); as the latter calls BIT_MASK_ULL which have a number of bit manipulations and then the comparison",
      "parentUuid": "abe3dd2d_45e781fb",
      "range": {
        "startLine": 1041,
        "startChar": 14,
        "endLine": 1041,
        "endChar": 18
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5c3236a_68f640c7",
        "filename": "lib/s2tt/src/s2tt.c",
        "patchSetId": 23
      },
      "lineNbr": 1041,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-21T20:17:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25c0c4fa_47049c25",
      "range": {
        "startLine": 1041,
        "startChar": 14,
        "endLine": 1041,
        "endChar": 18
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17a1cc60_0249fb8d",
        "filename": "lib/s2tt/src/s2tt_pvt_defs.h",
        "patchSetId": 23
      },
      "lineNbr": 102,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T13:37:19Z",
      "side": 1,
      "message": "...and not part of TTE.\"",
      "range": {
        "startLine": 102,
        "startChar": 77,
        "endLine": 102,
        "endChar": 79
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dbf0fc15_3ad1b19c",
        "filename": "lib/s2tt/src/s2tt_pvt_defs.h",
        "patchSetId": 23
      },
      "lineNbr": 102,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17a1cc60_0249fb8d",
      "range": {
        "startLine": 102,
        "startChar": 77,
        "endLine": 102,
        "endChar": 79
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12fc0ec5_c8dca1fd",
        "filename": "runtime/rmi/realm.c",
        "patchSetId": 23
      },
      "lineNbr": 69,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T15:45:47Z",
      "side": 1,
      "message": "is_lpa2_requested()",
      "range": {
        "startLine": 69,
        "startChar": 12,
        "endLine": 69,
        "endChar": 34
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c7b4d80_1cc7d345",
        "filename": "runtime/rmi/realm.c",
        "patchSetId": 23
      },
      "lineNbr": 69,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "12fc0ec5_c8dca1fd",
      "range": {
        "startLine": 69,
        "startChar": 12,
        "endLine": 69,
        "endChar": 34
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42532250_c1047bf0",
        "filename": "runtime/rmi/realm.c",
        "patchSetId": 23
      },
      "lineNbr": 87,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T15:45:47Z",
      "side": 1,
      "message": "The sl_max_ipa_bits is for sl \u003e\u003d 0\n\nwe need to have a separate check for sl_max_ipa_bits  when sl \u003d\u003d -1\n\n/* Add comment */\n\nif (sl \u003d\u003d -1) {\n    sl_max_ipa_bits \u003d (sl_min_ipa_bits + (S2TTE_STRIDE_LPA2 - 1U);\n}",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3ccd866_c65aebb8",
        "filename": "runtime/rmi/realm.c",
        "patchSetId": 23
      },
      "lineNbr": 87,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "the check is actually done in line 96. If level \u003d\u003d -1 then sl_max_ipa_bits \u003d\u003d S2TT_MAX_IPA_BITS_LPA2, which is the same as the assignment you suggested (sl_min_ipa_bits will be 48 with level \u003d\u003d -1).\n\nS2TTE_STRIDE_LPA2 wouldn\u0027t be an appropriate macro as the stride is always the same, regardless of whether LPA2 is enabled or not. Only the stride for level -1 is different, but the max ipa bits in that case can just be hardcoded to S2TT_MAX_IPA_BITS_LPA2.\n\nWRT the concatenated tables when sl \u003e 0, this only applies when FEAT_LPA2 is disabled. With LPA2 enabled sl 0 can have concatenated tables. Will fix this here. I think this will need to be a TFTF testcase.",
      "parentUuid": "42532250_c1047bf0",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b3ec36c_4b5cceb9",
        "filename": "runtime/rmi/realm.c",
        "patchSetId": 23
      },
      "lineNbr": 95,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T15:45:47Z",
      "side": 1,
      "message": "see above.",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3382d98_b66eebee",
        "filename": "runtime/rmi/realm.c",
        "patchSetId": 23
      },
      "lineNbr": 95,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "See my comment above.",
      "parentUuid": "9b3ec36c_4b5cceb9",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a7b6e2e_ae05af1b",
        "filename": "runtime/rmi/realm.c",
        "patchSetId": 23
      },
      "lineNbr": 130,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T15:45:47Z",
      "side": 1,
      "message": "I am wondering if there is  similar check with will be needed for LM1.",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7a01c06_5c93445d",
        "filename": "runtime/rmi/realm.c",
        "patchSetId": 23
      },
      "lineNbr": 130,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T16:11:07Z",
      "side": 1,
      "message": "I confirmed with the architecture that there is no such limitation for Level -1.",
      "parentUuid": "4a7b6e2e_ae05af1b",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea8b30b4_52247a67",
        "filename": "runtime/rmi/realm.c",
        "patchSetId": 23
      },
      "lineNbr": 130,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "Yes, this was taken from the AArch64.InvalidSL pseudocode. I actually double checked this as well as I wasn\u0027t very sure.",
      "parentUuid": "f7a01c06_5c93445d",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c710231_fc5e2037",
        "filename": "runtime/rmi/realm.c",
        "patchSetId": 23
      },
      "lineNbr": 149,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T15:45:47Z",
      "side": 1,
      "message": "The calculation is quite simple for LM1. Just return 1 😊",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 149,
        "endChar": 70
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89848b47_ba1b52f7",
        "filename": "runtime/rmi/realm.c",
        "patchSetId": 23
      },
      "lineNbr": 149,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "True 😄",
      "parentUuid": "4c710231_fc5e2037",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 149,
        "endChar": 70
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "942547d8_e1280b88",
        "filename": "runtime/rmi/rec.c",
        "patchSetId": 23
      },
      "lineNbr": 60,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T15:45:47Z",
      "side": 1,
      "message": "nit: check for lpa2 first.",
      "range": {
        "startLine": 60,
        "startChar": 60,
        "endLine": 60,
        "endChar": 65
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99ed3ced_27827a11",
        "filename": "runtime/rmi/rec.c",
        "patchSetId": 23
      },
      "lineNbr": 60,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "942547d8_e1280b88",
      "range": {
        "startLine": 60,
        "startChar": 60,
        "endLine": 60,
        "endChar": 65
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "297a8759_3814d71d",
        "filename": "runtime/rmi/rec.c",
        "patchSetId": 23
      },
      "lineNbr": 64,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T15:45:47Z",
      "side": 1,
      "message": "could give a comment similar to the other place you such a trick.",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0277329e_a7e2aa9d",
        "filename": "runtime/rmi/rec.c",
        "patchSetId": 23
      },
      "lineNbr": 64,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "297a8759_3814d71d",
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f80fc559_1854b3d5",
        "filename": "runtime/rmi/rtt.c",
        "patchSetId": 23
      },
      "lineNbr": 124,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-02-20T15:45:47Z",
      "side": 1,
      "message": "can make the masking part of pack_return_code ?",
      "range": {
        "startLine": 124,
        "startChar": 8,
        "endLine": 124,
        "endChar": 24
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ffd8178f_c76c6150",
        "filename": "runtime/rmi/rtt.c",
        "patchSetId": 23
      },
      "lineNbr": 124,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2024-02-20T19:28:34Z",
      "side": 1,
      "message": "Yes. I didn\u0027t feel very comfortable changing pack_return_code() as I needed to remove an assert(), but done. We can revert later if we decide so.",
      "parentUuid": "f80fc559_1854b3d5",
      "range": {
        "startLine": 124,
        "startChar": 8,
        "endLine": 124,
        "endChar": 24
      },
      "revId": "3c283e9a61884b4db929bbd988b73347ff7aeb87",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}