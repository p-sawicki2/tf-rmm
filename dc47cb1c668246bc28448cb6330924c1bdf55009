{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8bf90eaf_6abe1595",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-02T15:00:19Z",
      "side": 1,
      "message": "Need to add unit tests for RSI logger as part of this patch.",
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41ef6b4d_a3e6efb2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2023-05-02T15:08:34Z",
      "side": 1,
      "message": "Won\u0027t the RSI logger be called as part of RSI calls? Please explain what this unit test might do (checking the number of printed parameters and output values?).",
      "parentUuid": "8bf90eaf_6abe1595",
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "449434fd_29e45dfb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-02T15:30:59Z",
      "side": 1,
      "message": "It can check for invalid cases on exercised by RMM code and ensure that call the cases are covered. Basically it can check for all values of args of the API which may be difficult to be reached when invoked by RMM. Also reaching a particular condition in RSI logger when invoked from RMM depends on test in Realm.\n\nHaving this unit tests ensures that all the corner cases are exercised and full range of arguments are tested. It also provides an easy way to verify the RSI log formatting on the host machine.",
      "parentUuid": "41ef6b4d_a3e6efb2",
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f20964e_03a3873f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-02T15:42:46Z",
      "side": 1,
      "message": "It can check for invalid cases *not* exercised by RMM code and ensure that all the the cases are well handled the logging mechanism. Basically it can check for all values of args of the logging API which may be difficult to be reached when invoked by RMM. Also reaching a particular condition in RSI logger when invoked from RMM depends on test in Realm.\n\nHaving this unit tests ensures that all the corner cases are exercised and full range of arguments are tested. It also provides an easy way to verify the RSI log formatting on the host machine.",
      "parentUuid": "449434fd_29e45dfb",
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71672ee6_47af0fa3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2023-05-02T17:22:38Z",
      "side": 1,
      "message": "I think it should be a separate patch for unit tests.",
      "parentUuid": "9f20964e_03a3873f",
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e2dfbec_f19485ea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-03T04:33:57Z",
      "side": 1,
      "message": "Yes, a separate patch for the test is needed.",
      "parentUuid": "71672ee6_47af0fa3",
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd749a40_b99bf6ec",
        "filename": "runtime/core/exit.c",
        "patchSetId": 8
      },
      "lineNbr": 357,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-02T15:00:19Z",
      "side": 1,
      "message": "See my comments on this macro.",
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71419345_ba6a078f",
        "filename": "runtime/core/exit.c",
        "patchSetId": 8
      },
      "lineNbr": 357,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2023-05-03T11:52:39Z",
      "side": 1,
      "message": "Please see my reply.",
      "parentUuid": "bd749a40_b99bf6ec",
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6db6d016_e482732a",
        "filename": "runtime/core/handler.c",
        "patchSetId": 8
      },
      "lineNbr": 62,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-02T15:00:19Z",
      "side": 1,
      "message": "a comment on the side will be useful.\n\nenum rmi_type {\n\trmi_type(0, 0), /* 0 input, 0 output */\n\trmi_type(1, 0), /* 1 input, 0 output */ \n\trmi_type(2, 0), /* ... */\n\trmi_type(3, 0),\n\trmi_type(4, 0),\n\trmi_type(5, 0),\n\trmi_type(1, 1),\n\trmi_type(3, 4)  /* 3 inputs, 4 outputs */\n};",
      "range": {
        "startLine": 62,
        "startChar": 15,
        "endLine": 62,
        "endChar": 16
      },
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4b9024cc_e054963e",
        "filename": "runtime/core/handler.c",
        "patchSetId": 8
      },
      "lineNbr": 62,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2023-05-02T15:08:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6db6d016_e482732a",
      "range": {
        "startLine": 62,
        "startChar": 15,
        "endLine": 62,
        "endChar": 16
      },
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d20c081e_2ada67bc",
        "filename": "runtime/core/handler.c",
        "patchSetId": 8
      },
      "lineNbr": 168,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-02T15:00:19Z",
      "side": 1,
      "message": "add : assert(num \u003c 5);",
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d834a4c1_49217d1d",
        "filename": "runtime/core/handler.c",
        "patchSetId": 8
      },
      "lineNbr": 168,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2023-05-03T11:52:39Z",
      "side": 1,
      "message": "\u003c\u003d 5",
      "parentUuid": "d20c081e_2ada67bc",
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41d17943_5a527a61",
        "filename": "runtime/core/handler.c",
        "patchSetId": 8
      },
      "lineNbr": 170,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-02T15:00:19Z",
      "side": 1,
      "message": "Should this be aligned with %8lx ?",
      "range": {
        "startLine": 170,
        "startChar": 11,
        "endLine": 170,
        "endChar": 13
      },
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "918f4958_f6438dc5",
        "filename": "runtime/core/handler.c",
        "patchSetId": 8
      },
      "lineNbr": 170,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2023-05-02T15:08:34Z",
      "side": 1,
      "message": "Please see my answer to Suzuki for the same question:\nhttps://gerrit.oss.arm.com/c/trusted-firmware/tf-rmm/+/259093/6/runtime/rsi/logger.c#105\n\nThe idea was to reduce the length of logging strings.\nRMM now uses DRAM bank 2, which starts from 0x880000000, which breaks %8lx alignment. Besides that RSI commands will break any alignment:\nSMC_RSI_MEASUREMENT_EXTEND    1 20 1111111111111111 1111111111111111 1111111111111111 1111111111111111 0 0 0 0 \u003e RSI_SUCCESS\nSMC_RSI_ATTEST_TOKEN_INIT     80280000 abababababababab abababababababab abababababababab abababababababab abababababababab abababababababab abababababababab abababababababab \u003e RSI_SUCCESS",
      "parentUuid": "41d17943_5a527a61",
      "range": {
        "startLine": 170,
        "startChar": 11,
        "endLine": 170,
        "endChar": 13
      },
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5339ab24_89ddf27b",
        "filename": "runtime/core/handler.c",
        "patchSetId": 8
      },
      "lineNbr": 170,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-02T15:30:59Z",
      "side": 1,
      "message": "hmm, I see, in that case, we can either add an alignment of %13lx to cater for values upto 52 bits for RMI commands. The RSI prints can also be aligned to %13lx and I think printing all the arguments of RSI_READ_MEASUREMENT, RSI_ATTEST_INIT and RSI_MEASUREMENT_EXTEND is not necessary. We just need to know the call was made and possibly the return value for these particular  RSI calls.\n\nAligning the args makes for easy reading of the  logs (if we can pull it off). This depends on the a single RMI/RSI log fitting in a single line on a (1280 x 1024) screen. If there is overflow to the next line with the alignment, then there is less point in aligning.",
      "parentUuid": "918f4958_f6438dc5",
      "range": {
        "startLine": 170,
        "startChar": 11,
        "endLine": 170,
        "endChar": 13
      },
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "957984ab_e10373ae",
        "filename": "runtime/core/handler.c",
        "patchSetId": 8
      },
      "lineNbr": 170,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2023-05-02T17:22:38Z",
      "side": 1,
      "message": "Because number of arguments and output values are different for different RSI/RMI commands (as well as the length of status code strings: e.g. RMI_SUCCESS vs RMI_ERROR_INPUT), then printed strings won\u0027t be aligned in any case, so using aligned formats like %8lx or %13lx won\u0027t produce aligned text output.",
      "parentUuid": "5339ab24_89ddf27b",
      "range": {
        "startLine": 170,
        "startChar": 11,
        "endLine": 170,
        "endChar": 13
      },
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84ca402d_56a4992e",
        "filename": "runtime/core/handler.c",
        "patchSetId": 8
      },
      "lineNbr": 170,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-03T04:33:57Z",
      "side": 1,
      "message": "I see, ok. I think in that case, we can avoid the alignment. Could you also paste the output from a sample run after the change so it is clear the kind of change we are making ?",
      "parentUuid": "957984ab_e10373ae",
      "range": {
        "startLine": 170,
        "startChar": 11,
        "endLine": 170,
        "endChar": 13
      },
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffcaf5df_83a6f123",
        "filename": "runtime/core/handler.c",
        "patchSetId": 8
      },
      "lineNbr": 189,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-02T15:00:19Z",
      "side": 1,
      "message": "%8lx ?",
      "range": {
        "startLine": 189,
        "startChar": 12,
        "endLine": 189,
        "endChar": 14
      },
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdac8c59_1a1a8831",
        "filename": "runtime/core/handler.c",
        "patchSetId": 8
      },
      "lineNbr": 189,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2023-05-03T11:52:39Z",
      "side": 1,
      "message": "See my comment above.",
      "parentUuid": "ffcaf5df_83a6f123",
      "range": {
        "startLine": 189,
        "startChar": 12,
        "endLine": 189,
        "endChar": 14
      },
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "680fe049_4cd70d4b",
        "filename": "runtime/include/rsi-logger.h",
        "patchSetId": 8
      },
      "lineNbr": 20,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-02T15:00:19Z",
      "side": 1,
      "message": "#if (RSI_LOG_LEVEL \u003e LOG_LEVEL_NONE) \u0026\u0026 (RSI_LOG_LEVEL \u003c\u003d LOG_LEVEL)",
      "range": {
        "startLine": 20,
        "startChar": 5,
        "endLine": 20,
        "endChar": 37
      },
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52e82664_df5b14f9",
        "filename": "runtime/include/rsi-logger.h",
        "patchSetId": 8
      },
      "lineNbr": 20,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2023-05-03T11:52:39Z",
      "side": 1,
      "message": "What happens if RSI_LOG_LEVEL is set to 1...9?",
      "parentUuid": "680fe049_4cd70d4b",
      "range": {
        "startLine": 20,
        "startChar": 5,
        "endLine": 20,
        "endChar": 37
      },
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2813ec2_74d893b1",
        "filename": "runtime/include/rsi-logger.h",
        "patchSetId": 8
      },
      "lineNbr": 20,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-03T12:45:26Z",
      "side": 1,
      "message": "would it give compilation error if LOG_LEVEL is set to 1 to 9 ? If not , then it is probably fine.",
      "parentUuid": "52e82664_df5b14f9",
      "range": {
        "startLine": 20,
        "startChar": 5,
        "endLine": 20,
        "endChar": 37
      },
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee093ac7_65213e00",
        "filename": "runtime/include/rsi-logger.h",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-02T15:00:19Z",
      "side": 1,
      "message": "This can be defined to make the caller shorter.\n\n/* Takes an array of regs of size of atleast 11 and sets up the args for RSI log */\n\n# define RSI_LOG_SET(regs)     \\\n        unsigned long rsi_log_args[] \u003d {                        \\\n         regs[1], regs[2], regs[3], regs[4], regs[5], regs[6], regs[7], regs[8], regs[9], regs[10]               \\\n        }\n\n\nThe caller can be RSI_LOG_SET(rec-\u003eregs);",
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e03cf16_f3edf656",
        "filename": "runtime/include/rsi-logger.h",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2023-05-03T11:52:39Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ee093ac7_65213e00",
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8debb07b_2a09ee3d",
        "filename": "runtime/rsi/logger.c",
        "patchSetId": 8
      },
      "lineNbr": 110,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-02T15:00:19Z",
      "side": 1,
      "message": "%8lx ?",
      "range": {
        "startLine": 110,
        "startChar": 30,
        "endLine": 110,
        "endChar": 32
      },
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "193b1383_b308241d",
        "filename": "runtime/rsi/logger.c",
        "patchSetId": 8
      },
      "lineNbr": 159,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-02T15:00:19Z",
      "side": 1,
      "message": "add print for RSI_ABI_VERSION.",
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb4a403c_7c129124",
        "filename": "runtime/rsi/logger.c",
        "patchSetId": 8
      },
      "lineNbr": 159,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2023-05-03T13:29:02Z",
      "side": 1,
      "message": "This SMC_RSI_ABI_VERSION case prints return value of RSI_ABI_VERSION command.",
      "parentUuid": "193b1383_b308241d",
      "revId": "dc47cb1c668246bc28448cb6330924c1bdf55009",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}