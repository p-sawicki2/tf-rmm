{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "27ba53f3_413faeb3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1001079
      },
      "writtenOn": "2023-10-06T13:21:17Z",
      "side": 1,
      "message": "AFAIU, this is intentional. The host is permitted to destroy a s2 translation table when the table holds the references to physical addresses.",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 48
      },
      "revId": "eb72ec99daae3823b0be554589ba837c79da203e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "733b5de2_72dbd426",
        "filename": "lib/realm/src/s2tt.c",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1001079
      },
      "writtenOn": "2023-10-06T13:21:17Z",
      "side": 1,
      "message": "It defines the host\u0027s controlled fields in unprotected (NS) s2ttes and the name should probably reflect that, e.g.:\nS2TTE_HOST_NS_ATTR_MASK",
      "range": {
        "startLine": 68,
        "startChar": 8,
        "endLine": 68,
        "endChar": 24
      },
      "revId": "eb72ec99daae3823b0be554589ba837c79da203e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d5a16dc_19978a8a",
        "filename": "lib/realm/src/s2tt.c",
        "patchSetId": 5
      },
      "lineNbr": 69,
      "author": {
        "id": 1001079
      },
      "writtenOn": "2023-10-06T13:21:17Z",
      "side": 1,
      "message": "With this change, the host now also controls the access flag (AF). This hasn\u0027t been reflected in the comments below, e.g. see line 877",
      "range": {
        "startLine": 69,
        "startChar": 21,
        "endLine": 69,
        "endChar": 29
      },
      "revId": "eb72ec99daae3823b0be554589ba837c79da203e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c52e0074_de4af757",
        "filename": "lib/realm/src/s2tt.c",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1001079
      },
      "writtenOn": "2023-10-06T13:21:17Z",
      "side": 1,
      "message": "If the flag is now controlled by the host, shouldn\u0027t it be removed from here?",
      "range": {
        "startLine": 74,
        "startChar": 46,
        "endLine": 74,
        "endChar": 54
      },
      "revId": "eb72ec99daae3823b0be554589ba837c79da203e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a21888f4_b7f1590c",
        "filename": "lib/realm/src/s2tt.c",
        "patchSetId": 5
      },
      "lineNbr": 75,
      "author": {
        "id": 1001079
      },
      "writtenOn": "2023-10-06T13:21:17Z",
      "side": 1,
      "message": "As above",
      "range": {
        "startLine": 75,
        "startChar": 45,
        "endLine": 75,
        "endChar": 53
      },
      "revId": "eb72ec99daae3823b0be554589ba837c79da203e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a629a61_928e7881",
        "filename": "lib/realm/src/s2tt.c",
        "patchSetId": 5
      },
      "lineNbr": 501,
      "author": {
        "id": 1001079
      },
      "writtenOn": "2023-10-06T13:21:17Z",
      "side": 1,
      "message": "... and AF",
      "range": {
        "startLine": 501,
        "startChar": 5,
        "endLine": 501,
        "endChar": 17
      },
      "revId": "eb72ec99daae3823b0be554589ba837c79da203e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "adcb3b55_8ebdc348",
        "filename": "lib/realm/src/s2tt.c",
        "patchSetId": 5
      },
      "lineNbr": 505,
      "author": {
        "id": 1001079
      },
      "writtenOn": "2023-10-06T13:21:17Z",
      "side": 1,
      "message": "Why removing only this flag when the comment says that the caller provides the other four?\n\nEither assert against all fields:\nassert(!(s2tte \u0026 ~(S2TTE_ATTRS_MASK | pa_mask(level));\n\n...or don\u0027t do any check.\n\nIt also seems that this function is called from rtt.c with all fields from the parent entry, not just these four from the list.",
      "range": {
        "startLine": 505,
        "startChar": 0,
        "endLine": 505,
        "endChar": 2
      },
      "revId": "eb72ec99daae3823b0be554589ba837c79da203e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3952c60_b52bf44b",
        "filename": "lib/realm/src/s2tt.c",
        "patchSetId": 5
      },
      "lineNbr": 900,
      "author": {
        "id": 1001079
      },
      "writtenOn": "2023-10-06T13:21:17Z",
      "side": 1,
      "message": "Can you limit parent_s2tte argument to \"the host\u0027s controlled fields\"?\nThe term \"parent_s2tte\" describe a likely usage but it is ambiguous in this interface.",
      "range": {
        "startLine": 900,
        "startChar": 48,
        "endLine": 900,
        "endChar": 74
      },
      "revId": "eb72ec99daae3823b0be554589ba837c79da203e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbbd31e2_6fe8c557",
        "filename": "lib/realm/src/s2tt.c",
        "patchSetId": 5
      },
      "lineNbr": 1115,
      "author": {
        "id": 1001079
      },
      "writtenOn": "2023-10-06T13:21:17Z",
      "side": 1,
      "message": "Strictly speaking, the function checks that: \n- all attributes that are controlled by the host are identical.",
      "range": {
        "startLine": 1115,
        "startChar": 8,
        "endLine": 1115,
        "endChar": 57
      },
      "revId": "eb72ec99daae3823b0be554589ba837c79da203e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b84c774_f2a2a329",
        "filename": "runtime/rmi/rtt.c",
        "patchSetId": 5
      },
      "lineNbr": 364,
      "author": {
        "id": 1001079
      },
      "writtenOn": "2023-10-06T13:38:05Z",
      "side": 1,
      "message": "It is obvious that we can just copy SH, AF, MEM.ATTR \u0026 PERMS from parent table.\nIt is less obvious that we can do the same with PA without further alignment so a comment here would be useful, e.g.:\n\n/*\n * We can safely copy the PA from the first entry in \u0027table\u0027 because that PA is aligned\n * to the level below (`level`- 1), as, otherwise, `table_maps_assigned_ns_block_with_attrs` would have failed.\n */",
      "range": {
        "startLine": 364,
        "startChar": 43,
        "endLine": 364,
        "endChar": 48
      },
      "revId": "eb72ec99daae3823b0be554589ba837c79da203e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9756afce_746bcefe",
        "filename": "runtime/rmi/rtt.c",
        "patchSetId": 5
      },
      "lineNbr": 364,
      "author": {
        "id": 1001079
      },
      "writtenOn": "2023-10-06T13:38:05Z",
      "side": 1,
      "message": "This is undocumented use of this primitive as here we pass ALL fields.\nCan we remove everything else except: PA, SH, AF, MEM.ATTR \u0026 PERMS)?",
      "range": {
        "startLine": 364,
        "startChar": 18,
        "endLine": 364,
        "endChar": 42
      },
      "revId": "eb72ec99daae3823b0be554589ba837c79da203e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}