{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "deac781e_c318a16a",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T13:49:01Z",
      "side": 1,
      "message": "minor: Can add a test for the valid case as well eventhough the operation in NOP on fake_host. Same comment for below as well. \n\nThis is mainly for coverage reasons.",
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2773e823_507e806a",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 430,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T13:49:01Z",
      "side": 1,
      "message": "A minor suggestion.\n\na static function can be defined at top which take unassigned_ripas and assigned_ripas as args.\n\nThis will help to reduce 4 copies of this function in this file.",
      "range": {
        "startLine": 430,
        "startChar": 5,
        "endLine": 430,
        "endChar": 36
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c8defce_6a160211",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1709,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T13:49:01Z",
      "side": 1,
      "message": "till here.",
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f8a65a5_8bd5dcf0",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1711,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T13:49:01Z",
      "side": 1,
      "message": "```\n\n* Ancillary function to generate a test input s2tt_skip_non_live_entries(). The only input required to this function is @wi.index. The rest are output values.\n\n *\t- Arguments:\n *\t\titer: Iteration number. 0: generate a live S2TTE at index \u003e wi.index, 1:  generate a live S2TTE at index at wi.index , 2: generate a live S2TTE at index \u003c wi.index.\n *\t\twi:  The s2tt_walk structure to pass to s2tt_skip_non_live_entries(). Other than wi.level, all other fieds are setup by this helper.\n *\t\ttte_idx: tte index where the live entry is generated.,\n *\t\taligned_ipa: the ipa corresponding the tte_index.\n *\t\tunaligned_ipa: The unaligned ipa corresponding to tte_index.\n *\n *\t- Returns: The expected ipa that should be returned by\n *\t\t   s2tt_skip_non_live_entries() as per the test input.\n */\n```",
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "863fd6d1_cb452765",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1718,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T13:49:01Z",
      "side": 1,
      "message": "nit: the alignment is not correct for this comment block.",
      "range": {
        "startLine": 1718,
        "startChar": 3,
        "endLine": 1718,
        "endChar": 8
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "905de640_45fc7b01",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1733,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T13:49:01Z",
      "side": 1,
      "message": "remove the s2tt_ prefix since this is an internal static function.",
      "range": {
        "startLine": 1733,
        "startChar": 21,
        "endLine": 1733,
        "endChar": 26
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "317024cc_4b2e8ea3",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1744,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T13:49:01Z",
      "side": 1,
      "message": "wi.index somewhere in the middle of the table.",
      "range": {
        "startLine": 1743,
        "startChar": 29,
        "endLine": 1744,
        "endChar": 44
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab06e497_75354d32",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1755,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T13:49:01Z",
      "side": 1,
      "message": "remove notion of above, and below. Use \u003e, \u003d\u003d or \u003c.",
      "range": {
        "startLine": 1755,
        "startChar": 24,
        "endLine": 1755,
        "endChar": 30
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58fb74d6_623582a1",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1784,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T13:49:01Z",
      "side": 1,
      "message": "aligned_ipa",
      "range": {
        "startLine": 1784,
        "startChar": 2,
        "endLine": 1784,
        "endChar": 12
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9de51982_4bc45337",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1790,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T13:49:01Z",
      "side": 1,
      "message": "`unaligned_ipa`",
      "range": {
        "startLine": 1790,
        "startChar": 2,
        "endLine": 1790,
        "endChar": 6
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "492ca603_2feb57aa",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1791,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T13:49:01Z",
      "side": 1,
      "message": "this is `aligned_ipa` + random()",
      "range": {
        "startLine": 1790,
        "startChar": 8,
        "endLine": 1791,
        "endChar": 39
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8b4c492_a89a19a0",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1793,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T13:49:01Z",
      "side": 1,
      "message": "explain the rationale.\n\nwhen iter \u003d\u003d 0, we expect the tested function to return the `aligned_ipa`. When iter \u003d\u003d 1, we expect the tested function to return the unaligned_ipa. Otherwise the tested function returns the start to ipa of next table.",
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49956a4a_54b1c056",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1809,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T13:49:01Z",
      "side": 1,
      "message": "`\u003e`",
      "range": {
        "startLine": 1809,
        "startChar": 12,
        "endLine": 1809,
        "endChar": 17
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93dd6f67_4289d3b7",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1811,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T13:49:01Z",
      "side": 1,
      "message": "at wi.index..",
      "range": {
        "startLine": 1811,
        "startChar": 6,
        "endLine": 1811,
        "endChar": 18
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3584f33e_9a2074a2",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1813,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T13:49:01Z",
      "side": 1,
      "message": "`\u003c`",
      "range": {
        "startLine": 1813,
        "startChar": 35,
        "endLine": 1813,
        "endChar": 40
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16e0eb47_08fb780e",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1899,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T13:49:01Z",
      "side": 1,
      "message": "from the last test when iter \u003d\u003d 2, we ...",
      "range": {
        "startLine": 1899,
        "startChar": 24,
        "endLine": 1899,
        "endChar": 33
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e4036df_2b78854b",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2070,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T13:49:01Z",
      "side": 1,
      "message": "till here.",
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b3d78be_588dbe67",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2075,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "caller to ensure that this ipa will not exceed the an index to S2TTE_MAX_CONCAT_TABLES.",
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13bc680c_39bf67d3",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2076,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "call this param : tt_walk_idx\n\nAn array of indexes to the tables in tt_walk[] used to walk the tables.",
      "range": {
        "startLine": 2076,
        "startChar": 5,
        "endLine": 2076,
        "endChar": 16
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cffde1f0_ffe03340",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2078,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "call this param tt_walk[].  An array of tt base addresses for each level which will used to walk the tables.",
      "range": {
        "startLine": 2078,
        "startChar": 5,
        "endLine": 2078,
        "endChar": 19
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1d84557_db9f7c69",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2082,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "this comment needs to be moved to line 2073. \n\nThe starting level (SL) for the tables is always expected to be the lowest level supported by the architecture. The concatenated tables begin at SL + 1 level.",
      "range": {
        "startLine": 2080,
        "startChar": 52,
        "endLine": 2082,
        "endChar": 20
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f62dc1bf_97b6bae5",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2083,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "tt_granules[]\n\nArray to store the `struct granule *` coresponding to tt_walk[] entries.",
      "range": {
        "startLine": 2083,
        "startChar": 5,
        "endLine": 2083,
        "endChar": 13
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1b70fbc_b5a87b55",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2085,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "val_tt_granule: The expected `struct granule *` of S2TT at the end of Test function.",
      "range": {
        "startLine": 2085,
        "startChar": 5,
        "endLine": 2085,
        "endChar": 16
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58c715bd_fded3ab5",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2091,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "remove these arguments as they are the same for all callers and hence can be hardcoded inside this.",
      "range": {
        "startLine": 2087,
        "startChar": 0,
        "endLine": 2091,
        "endChar": 24
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d744e1ab_23342713",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2096,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "* This function creates a set of S2TTE_MAX_CONCAT_TABLES at the level after\n * the starting level (sl) i.e at sl+1 level. The `ipa` argument is such that the translation table hierarchy at sl+l level will be within the S2TTE_MAX_CONCAT_TABLES. Now this allows the caller to test concatenated tables by using Translation tables hierarchy at sl+1 level as the start level to the test function. As an example, the layout of an array of adjacent granules which will be used to create translation table hierarchy starting from level 0 to level 3 would be as follows:",
      "range": {
        "startLine": 2093,
        "startChar": 0,
        "endLine": 2096,
        "endChar": 69
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "457c6a32_e08659fc",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2099,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "granule_base.",
      "range": {
        "startLine": 2099,
        "startChar": 3,
        "endLine": 2099,
        "endChar": 20
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a48dabc_a72fa62c",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2099,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "on -\u003e in",
      "range": {
        "startLine": 2099,
        "startChar": 55,
        "endLine": 2099,
        "endChar": 57
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78294b9f_847e97fb",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2120,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "are sized correctly.",
      "range": {
        "startLine": 2119,
        "startChar": 12,
        "endLine": 2120,
        "endChar": 23
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "270fb6d7_3fbd49ec",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2124,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "remove",
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a3521a3_255d9f40",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2124,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:11:13Z",
      "side": 1,
      "message": "remove the \"possition \"",
      "parentUuid": "270fb6d7_3fbd49ec",
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "970ebc1b_b152b5f4",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2125,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "tt_walk*[] arrays",
      "range": {
        "startLine": 2125,
        "startChar": 4,
        "endLine": 2125,
        "endChar": 12
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13f4fa16_7b168867",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2126,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "i.e when the SL is 0.",
      "range": {
        "startLine": 2126,
        "startChar": 56,
        "endLine": 2126,
        "endChar": 60
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bdf8889_11dd4d64",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2154,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "this variable should be in allocate_granule().",
      "range": {
        "startLine": 2154,
        "startChar": 1,
        "endLine": 2154,
        "endChar": 14
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c14e48e1_122c9638",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2155,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "sl + 1",
      "range": {
        "startLine": 2155,
        "startChar": 10,
        "endLine": 2155,
        "endChar": 22
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "844eaf94_da7abac6",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2179,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "comment not clear. remove.",
      "range": {
        "startLine": 2176,
        "startChar": 5,
        "endLine": 2179,
        "endChar": 24
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbf7fb25_a012c22b",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2183,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": ".. and populate 16 entries of the parent table to point to base of each concatenated table.",
      "range": {
        "startLine": 2183,
        "startChar": 44,
        "endLine": 2183,
        "endChar": 46
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47557603_7b4f9e53",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2186,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "`concat_table`",
      "range": {
        "startLine": 2186,
        "startChar": 4,
        "endLine": 2186,
        "endChar": 13
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4778e474_01e35bb4",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2187,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "write a small allocator for this and check that we dont go past HOST_NR_GRANULES. It can also do memset(0).",
      "range": {
        "startLine": 2187,
        "startChar": 5,
        "endLine": 2187,
        "endChar": 38
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed50c58d_10159b49",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2194,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "can be done in allocate_table()",
      "range": {
        "startLine": 2194,
        "startChar": 4,
        "endLine": 2194,
        "endChar": 52
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89842254_70e19070",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2201,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": ".Find that table and assign to current level of tt_walk[].",
      "range": {
        "startLine": 2200,
        "startChar": 28,
        "endLine": 2201,
        "endChar": 27
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1293da8a_9f89bf2b",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2204,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "add assert that this value is within the concatenated tables.",
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f2e35ba_d0d54d70",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2204,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "sl may not be needed?",
      "range": {
        "startLine": 2204,
        "startChar": 6,
        "endLine": 2204,
        "endChar": 8
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6475a941_f36ffe66",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2204,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:11:13Z",
      "side": 1,
      "message": "Ignore",
      "parentUuid": "3f2e35ba_d0d54d70",
      "range": {
        "startLine": 2204,
        "startChar": 6,
        "endLine": 2204,
        "endChar": 8
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1436e9df_ae13460f",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2213,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "`current_table`",
      "range": {
        "startLine": 2213,
        "startChar": 3,
        "endLine": 2213,
        "endChar": 11
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca2d9728_4c8b5742",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2218,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "there is no `map` operation here.\n\nAssign the table to current level of tt_walk[].",
      "range": {
        "startLine": 2218,
        "startChar": 6,
        "endLine": 2218,
        "endChar": 47
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e29a035_fba5bf56",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2229,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "use allocater",
      "range": {
        "startLine": 2228,
        "startChar": 15,
        "endLine": 2229,
        "endChar": 38
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d20688bf_1b75c375",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2233,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "L3 table.",
      "range": {
        "startLine": 2233,
        "startChar": 32,
        "endLine": 2233,
        "endChar": 42
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa800c65_8308ba60",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2235,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "...using the ipa as the pa.\"",
      "range": {
        "startLine": 2235,
        "startChar": 12,
        "endLine": 2235,
        "endChar": 13
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b474d904_08d31fec",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2239,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "this needs to be converted to LPA2 format correctly.",
      "range": {
        "startLine": 2239,
        "startChar": 12,
        "endLine": 2239,
        "endChar": 16
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b14e9f47_058bddb5",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2241,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "same comment as above.",
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74120806_064e221d",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2262,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-04T21:07:45Z",
      "side": 1,
      "message": "use plat_granule_addr_to_idx() here to get the granule addr\n\n*val_rtt_granule \u003d plat_granule_addr_to_idx (tt_walk[end_lvl + 1]);",
      "range": {
        "startLine": 2254,
        "startChar": 0,
        "endLine": 2262,
        "endChar": 1
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e3a0aae_89d96083",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2270,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-05T11:55:39Z",
      "side": 1,
      "message": "starting",
      "range": {
        "startLine": 2270,
        "startChar": 32,
        "endLine": 2270,
        "endChar": 41
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a8f9d1d_07ea29e7",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2282,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-05T11:55:39Z",
      "side": 1,
      "message": "incorrect description ?",
      "range": {
        "startLine": 2277,
        "startChar": 0,
        "endLine": 2282,
        "endChar": 43
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3696dc0_42911e08",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2292,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-05T11:55:39Z",
      "side": 1,
      "message": "rename these variables as per comments given to function above.",
      "range": {
        "startLine": 2292,
        "startChar": 15,
        "endLine": 2292,
        "endChar": 26
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b4f292e_146ee5e6",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2309,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-05T11:55:39Z",
      "side": 1,
      "message": "... span across the IPA size but can fit within S2TTE_MAX_CONCAT_TABLES at sl + 1.\"",
      "range": {
        "startLine": 2309,
        "startChar": 49,
        "endLine": 2309,
        "endChar": 67
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9ade1d1_4cf7b6d3",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2315,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-05T11:55:39Z",
      "side": 1,
      "message": "starting level is confusing. reword this paragraph as :\n\n\" If the address can fit within S2TTE_MAX_CONCAT_TABLES at sl + 1, we can use the same tables for testing the concatenated root table support.\"",
      "range": {
        "startLine": 2312,
        "startChar": 24,
        "endLine": 2315,
        "endChar": 43
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddf5b5f8_c495e855",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2421,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-05T11:55:39Z",
      "side": 1,
      "message": "didn\u0027t get how this will work as this is a pointer to the granule. would prefer to use platform API on the level - 1 granule address to get the granule.",
      "range": {
        "startLine": 2421,
        "startChar": 1,
        "endLine": 2421,
        "endChar": 12
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7572d22c_8a891691",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2439,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-05T11:55:39Z",
      "side": 1,
      "message": "wrong comment as root grnaule is level is sl + 2 ?",
      "range": {
        "startLine": 2438,
        "startChar": 4,
        "endLine": 2439,
        "endChar": 61
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ec92a11_5ca0be03",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2449,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-05T11:55:39Z",
      "side": 1,
      "message": "would prefer to reinitilaize the end level.",
      "range": {
        "startLine": 2449,
        "startChar": 1,
        "endLine": 2449,
        "endChar": 13
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f735c38e_6255355a",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2450,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-05T11:55:39Z",
      "side": 1,
      "message": "same comment for this.",
      "range": {
        "startLine": 2450,
        "startChar": 1,
        "endLine": 2450,
        "endChar": 12
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84d66196_88cd4db5",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2459,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-05T11:55:39Z",
      "side": 1,
      "message": "I dont understand this. Shouldn\u0027t this be sl + 2 ?",
      "range": {
        "startLine": 2459,
        "startChar": 30,
        "endLine": 2459,
        "endChar": 37
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "814d69ce_d91d1143",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2490,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-05T11:55:39Z",
      "side": 1,
      "message": "reinit end level again.",
      "range": {
        "startLine": 2490,
        "startChar": 9,
        "endLine": 2490,
        "endChar": 19
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7711b98b_51a5f971",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2592,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-05T11:55:39Z",
      "side": 1,
      "message": "correct comment as mentioned above and similar comments below.",
      "range": {
        "startLine": 2585,
        "startChar": 14,
        "endLine": 2592,
        "endChar": 52
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a37bc072_51942684",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 3109,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-05T11:55:39Z",
      "side": 1,
      "message": "correct the comment.",
      "range": {
        "startLine": 3108,
        "startChar": 25,
        "endLine": 3109,
        "endChar": 50
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2ffc050_0dd667f9",
        "filename": "lib/s2tt/tests/s2tt_tests_base_g2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 3117,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-05T11:55:39Z",
      "side": 1,
      "message": "```\n   sl_index \u003d s2tt_test_helpers_get_idx_from_addr(pa, sl);\n} while (sl_index \u003c S2TTE_MAX_CONCAT_TABLES);\n```\n\nWouldn\u0027t his work ?",
      "range": {
        "startLine": 3116,
        "startChar": 13,
        "endLine": 3117,
        "endChar": 55
      },
      "revId": "7d5e0814d02affd0dba77b6a8424bf10eb109792",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}