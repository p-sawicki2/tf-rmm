{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6e04b696_bddcba1c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 19
      },
      "lineNbr": 12,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2022-12-01T13:42:12Z",
      "side": 1,
      "message": "coverage",
      "range": {
        "startLine": 12,
        "startChar": 4,
        "endLine": 12,
        "endChar": 13
      },
      "revId": "fb93c0009ada3c88f371540e12ecdb4e27b1fc7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64f74045_3e222f65",
        "filename": "/COMMIT_MSG",
        "patchSetId": 19
      },
      "lineNbr": 12,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2022-12-01T13:42:12Z",
      "side": 1,
      "message": "this should be \"coverage\"",
      "range": {
        "startLine": 12,
        "startChar": 58,
        "endLine": 12,
        "endChar": 66
      },
      "revId": "fb93c0009ada3c88f371540e12ecdb4e27b1fc7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fcc84f8_d99cc064",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2022-12-01T14:38:42Z",
      "side": 1,
      "message": "I think Coverage should be made a more central feature (not coupled to Utests).\n\nIn commonconfigs.cmake , define a RMM_COVERAGE option which is OFF by default and Depends on fake_host\n\narm_config_option(\n    NAME RMM_COVERAGE\n    HELP \"RMM Coverage build\"\n    TYPE BOOL\n    DEFAULT OFF\n    DEPENDS (RMM_ARCH STREQUAL fake_host))\n\n\nAdd documentation to mention additional dependencies \u0026 install them.\n\nIn the main make file, if RMM_COVERAGE is ON, then include a cmake file exclusively for coverage.",
      "revId": "fb93c0009ada3c88f371540e12ecdb4e27b1fc7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b4308d2_fe1077c4",
        "filename": "cmake/Modules/UnitTestFramework.cmake",
        "patchSetId": 19
      },
      "lineNbr": 72,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2022-12-01T14:44:57Z",
      "side": 1,
      "message": "move to a new cmakefile for this and include from main cmake if RMM_COVERAGE\u003dON",
      "revId": "fb93c0009ada3c88f371540e12ecdb4e27b1fc7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ae14166_8d3fac06",
        "filename": "cmake/Modules/UnitTestFramework.cmake",
        "patchSetId": 19
      },
      "lineNbr": 82,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2022-12-01T14:44:57Z",
      "side": 1,
      "message": "Also include the $\u003cconfig\u003e in the path to support multi-config build\n\n${CMAKE_BINARY_DIR}/Testing/$\u003cCONFIG\u003e/coverage",
      "range": {
        "startLine": 82,
        "startChar": 36,
        "endLine": 82,
        "endChar": 72
      },
      "revId": "fb93c0009ada3c88f371540e12ecdb4e27b1fc7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96cb4f52_8ee7ae2b",
        "filename": "configs/host_defcfg.cmake",
        "patchSetId": 19
      },
      "lineNbr": 39,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2022-12-01T14:44:57Z",
      "side": 1,
      "message": "can move to commonconfig.cmake. remove \"Advanced\" , except for the last one.",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 39,
        "endChar": 13
      },
      "revId": "fb93c0009ada3c88f371540e12ecdb4e27b1fc7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c59ebaa_b2030185",
        "filename": "docs/getting_started/build-options.rst",
        "patchSetId": 19
      },
      "lineNbr": 165,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2022-12-01T14:38:42Z",
      "side": 1,
      "message": "should be disabled by default.",
      "range": {
        "startLine": 165,
        "startChar": 43,
        "endLine": 165,
        "endChar": 87
      },
      "revId": "fb93c0009ada3c88f371540e12ecdb4e27b1fc7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "473b0887_645516ac",
        "filename": "docs/getting_started/build-options.rst",
        "patchSetId": 19
      },
      "lineNbr": 182,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2022-12-01T14:38:42Z",
      "side": 1,
      "message": "host",
      "range": {
        "startLine": 182,
        "startChar": 50,
        "endLine": 182,
        "endChar": 55
      },
      "revId": "fb93c0009ada3c88f371540e12ecdb4e27b1fc7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "911954b1_315528e9",
        "filename": "docs/getting_started/build-options.rst",
        "patchSetId": 19
      },
      "lineNbr": 236,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2022-12-01T14:38:42Z",
      "side": 1,
      "message": "rename to RMM_COVERAGE and default to OFF.",
      "range": {
        "startLine": 236,
        "startChar": 3,
        "endLine": 236,
        "endChar": 19
      },
      "revId": "fb93c0009ada3c88f371540e12ecdb4e27b1fc7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "059bdffb_aa5bfcbb",
        "filename": "docs/getting_started/build-options.rst",
        "patchSetId": 19
      },
      "lineNbr": 237,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2022-12-01T14:38:42Z",
      "side": 1,
      "message": "rename to RMM_HTML_COV_REPORT",
      "range": {
        "startLine": 237,
        "startChar": 3,
        "endLine": 237,
        "endChar": 28
      },
      "revId": "fb93c0009ada3c88f371540e12ecdb4e27b1fc7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc4691b8_7f90c7d8",
        "filename": "toolchains/fake_host/llvm.cmake",
        "patchSetId": 19
      },
      "lineNbr": 23,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2022-12-01T14:44:57Z",
      "side": 1,
      "message": "usually it is not correct to test for plat/user variables in toolchain file. Would be better if this can be moved to coverage cmake file",
      "range": {
        "startLine": 23,
        "startChar": 4,
        "endLine": 23,
        "endChar": 21
      },
      "revId": "fb93c0009ada3c88f371540e12ecdb4e27b1fc7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26b1aa81_60b8e955",
        "filename": "toolchains/fake_host/llvm.cmake",
        "patchSetId": 19
      },
      "lineNbr": 37,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2022-12-01T14:44:57Z",
      "side": 1,
      "message": "can be set in cmake file dedicated for coverage.",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 37,
        "endChar": 37
      },
      "revId": "fb93c0009ada3c88f371540e12ecdb4e27b1fc7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}