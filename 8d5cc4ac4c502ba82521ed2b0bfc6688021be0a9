{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6d4d4177_4465731a",
        "filename": "cmake/CommonConfigs.cmake",
        "patchSetId": 10
      },
      "lineNbr": 144,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-09T09:38:44Z",
      "side": 1,
      "message": "This can be detected by RMM_ARCH\u003dfake_host or RMM_ARCH !\u003d aarch64.\n\n\nneed not add one more define to the build cmd line.",
      "range": {
        "startLine": 141,
        "startChar": 0,
        "endLine": 144,
        "endChar": 7
      },
      "revId": "8d5cc4ac4c502ba82521ed2b0bfc6688021be0a9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a997828_bcdf0c13",
        "filename": "cmake/CommonConfigs.cmake",
        "patchSetId": 10
      },
      "lineNbr": 144,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-07-09T12:47:39Z",
      "side": 1,
      "message": "\u003e This can be detected by RMM_ARCH\u003dfake_host or RMM_ARCH !\u003d aarch64.\n\u003e \n\u003e \n\u003e need not add one more define to the build cmd line.\n\nI added this as RMM_ARCH is cmake variable, for cmake check I can use RMM_ARCH. But this doesn\u0027t corresponds to a C define flag. So added compile definition",
      "parentUuid": "6d4d4177_4465731a",
      "range": {
        "startLine": 141,
        "startChar": 0,
        "endLine": 144,
        "endChar": 7
      },
      "revId": "8d5cc4ac4c502ba82521ed2b0bfc6688021be0a9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e35a1e61_b550f6b3",
        "filename": "configs/mbedtls/rmm_mbedtls_config.h",
        "patchSetId": 10
      },
      "lineNbr": 140,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-09T09:38:44Z",
      "side": 1,
      "message": "avoid this variable. Use RMM_ARCH config.",
      "range": {
        "startLine": 140,
        "startChar": 6,
        "endLine": 140,
        "endChar": 24
      },
      "revId": "8d5cc4ac4c502ba82521ed2b0bfc6688021be0a9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d321c1f3_9588bc05",
        "filename": "lib/CMakeLists.txt",
        "patchSetId": 10
      },
      "lineNbr": 47,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-09T09:38:44Z",
      "side": 1,
      "message": "can this go in rmm-lib-spdm_requester and be linked to the rmm-lib-spdm_requester lib ?",
      "range": {
        "startLine": 45,
        "startChar": 3,
        "endLine": 47,
        "endChar": 11
      },
      "revId": "8d5cc4ac4c502ba82521ed2b0bfc6688021be0a9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51705e47_95bffea0",
        "filename": "lib/CMakeLists.txt",
        "patchSetId": 10
      },
      "lineNbr": 47,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-07-09T12:47:39Z",
      "side": 1,
      "message": "\u003e can this go in rmm-lib-spdm_requester and be linked to the rmm-lib-spdm_requester lib ?\n\nAs rmm-lib-spdm_requester is an interface library, I can\u0027t add sources to it. Added a comment at https://review.trustedfirmware.org/c/TF-RMM/tf-rmm/+/28569/10/lib/spdm_requester/tests/CMakeLists.txt#10",
      "parentUuid": "d321c1f3_9588bc05",
      "range": {
        "startLine": 45,
        "startChar": 3,
        "endLine": 47,
        "endChar": 11
      },
      "revId": "8d5cc4ac4c502ba82521ed2b0bfc6688021be0a9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25d47aec_db20adc9",
        "filename": "lib/spdm_requester/CMakeLists.txt",
        "patchSetId": 10
      },
      "lineNbr": 81,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-09T09:38:44Z",
      "side": 1,
      "message": "use RMM_ARCH variable.",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 81,
        "endChar": 30
      },
      "revId": "8d5cc4ac4c502ba82521ed2b0bfc6688021be0a9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09b6a9ab_bf4ccf0c",
        "filename": "lib/spdm_requester/tests/spdm_requester_tests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-07-09T12:47:39Z",
      "side": 1,
      "message": "As libspdm and RMM are using the same mbedtls now, we can skip this patch. This was added very early when RMM mbedtls was 3.4 and libspdm was at 2.28.",
      "revId": "8d5cc4ac4c502ba82521ed2b0bfc6688021be0a9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe1cec5d_b336c49d",
        "filename": "lib/spdm_requester/tests/spdm_requester_tests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 18,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-09T09:38:44Z",
      "side": 1,
      "message": "need another macro for this , ideally coming from the define which will be used for allocating heap in pdev object.",
      "range": {
        "startLine": 18,
        "startChar": 35,
        "endLine": 18,
        "endChar": 52
      },
      "revId": "8d5cc4ac4c502ba82521ed2b0bfc6688021be0a9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87aaec26_0a82af96",
        "filename": "lib/spdm_requester/tests/spdm_requester_tests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 18,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-07-09T12:47:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe1cec5d_b336c49d",
      "range": {
        "startLine": 18,
        "startChar": 35,
        "endLine": 18,
        "endChar": 52
      },
      "revId": "8d5cc4ac4c502ba82521ed2b0bfc6688021be0a9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "015bc585_6fd769f9",
        "filename": "lib/spdm_requester/tests/spdm_requester_tests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 19,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-09T09:38:44Z",
      "side": 1,
      "message": "this heap for libspdm should come from pdev during runtime. Add a comment here saying that since unit tests do not have PDEV object assigned , manually allocate the HEAP here.",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 19,
        "endChar": 38
      },
      "revId": "8d5cc4ac4c502ba82521ed2b0bfc6688021be0a9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec2fa4ce_3b3e5bfa",
        "filename": "lib/spdm_requester/tests/spdm_requester_tests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 19,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-07-09T12:47:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "015bc585_6fd769f9",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 19,
        "endChar": 38
      },
      "revId": "8d5cc4ac4c502ba82521ed2b0bfc6688021be0a9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}