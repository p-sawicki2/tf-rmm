{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f8af8ee5_829110cd",
        "filename": "lib/arch/include/arch_features.h",
        "patchSetId": 16
      },
      "lineNbr": 68,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T15:13:22Z",
      "side": 1,
      "message": "nit: swap these to reflect the code.",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 68,
        "endChar": 51
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2fe4a2c0_4af85775",
        "filename": "lib/arch/include/arch_features.h",
        "patchSetId": 16
      },
      "lineNbr": 68,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-19T18:32:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f8af8ee5_829110cd",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 68,
        "endChar": 51
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2e424ec_fea16d1c",
        "filename": "lib/xlat/include/xlat_defs.h",
        "patchSetId": 16
      },
      "lineNbr": 84,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T15:13:22Z",
      "side": 1,
      "message": "this needs to be removed I think.",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 84,
        "endChar": 28
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "161fd79f_c8780a21",
        "filename": "lib/xlat/include/xlat_defs.h",
        "patchSetId": 16
      },
      "lineNbr": 84,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-19T18:32:10Z",
      "side": 1,
      "message": "Removed as per https://review.trustedfirmware.org/c/TF-RMM/tf-rmm/+/20965/14/lib/xlat/include/xlat_defs.h",
      "parentUuid": "b2e424ec_fea16d1c",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 84,
        "endChar": 28
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8befb64b_371858dc",
        "filename": "lib/xlat/src/xlat_contexts.c",
        "patchSetId": 16
      },
      "lineNbr": 93,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T15:13:22Z",
      "side": 1,
      "message": "nit : U",
      "range": {
        "startLine": 93,
        "startChar": 39,
        "endLine": 93,
        "endChar": 40
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9df22d02_0225dd2c",
        "filename": "lib/xlat/src/xlat_contexts.c",
        "patchSetId": 16
      },
      "lineNbr": 93,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-19T18:32:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8befb64b_371858dc",
      "range": {
        "startLine": 93,
        "startChar": 39,
        "endLine": 93,
        "endChar": 40
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5bf0df0_633ff6ae",
        "filename": "lib/xlat/src/xlat_defs_private.h",
        "patchSetId": 16
      },
      "lineNbr": 90,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T15:13:22Z",
      "side": 1,
      "message": "could do with the prefix like : TCR_SH_ISH",
      "range": {
        "startLine": 90,
        "startChar": 8,
        "endLine": 90,
        "endChar": 12
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47a4b9c2_e8a65b3c",
        "filename": "lib/xlat/src/xlat_defs_private.h",
        "patchSetId": 16
      },
      "lineNbr": 90,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-19T18:32:10Z",
      "side": 1,
      "message": "SH field has the same meaning whether it is used on TCR or in the TTE. The only change is the location. so \u0027ISH\u0027 is generic and usable on any instance.\n\nIs the comment what it is misleading here. I\u0027ll fix it.\n\nI also moved SET_TCR_SH() macro, in charge of setting the SH field on TCR_EL2 here for better clarity.",
      "parentUuid": "e5bf0df0_633ff6ae",
      "range": {
        "startLine": 90,
        "startChar": 8,
        "endLine": 90,
        "endChar": 12
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7347c8c4_81a8842b",
        "filename": "lib/xlat/src/xlat_defs_private.h",
        "patchSetId": 16
      },
      "lineNbr": 90,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T19:51:06Z",
      "side": 1,
      "message": "it was a confusing usage (INPLACE(INPLACE()) and it was difficult to work out the total shift applied. \n\nIn previous code LOWER_ATTR(ISH) was done directly which is more readable IMO.\n\nSo either you could define LOWER_ATTR_SH() macro or you could define 2 ISH\u0027s: One for LOWER_ATTR and other for TCR.",
      "parentUuid": "47a4b9c2_e8a65b3c",
      "range": {
        "startLine": 90,
        "startChar": 8,
        "endLine": 90,
        "endChar": 12
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b17a2929_5a0a5655",
        "filename": "lib/xlat/src/xlat_defs_private.h",
        "patchSetId": 16
      },
      "lineNbr": 90,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-20T09:37:25Z",
      "side": 1,
      "message": "I don\u0027t think we should have two different macros to express exactly the same thing (in this case, the ISH value) as in my opinion this can also be very confusing and prone to errors if we have to modify it in the future. For instance, one could be modified and the other one forgotten about.\n\nISH is not a shift, e.g. it does not defines the SH field. ISH is the actual value to store in the field. It is not affected by which macro we use on it. It will always have the same value. Also, al the lower attrs are setup through the LOWER_ATTRS() macro, so I wanted to keep it consistent as the SH on the descriptor is also a lower attribute.\n\nSo in order to be able to have a single, generic ISH value that can be used on any SH field, I came up with macros for the SH in the descriptors as well as a counterpart for the TCR_EL2 register when FEAT_LPA2 is enabled.\n\nIf we don\u0027t want to use LOWER_ATTRS() macro (because of the underlying INPLACE(INPLACE())) I guess I could remove the LOWER_ATTRS() macro and replace it whit shifts everywhere for consistency. I just don\u0027t think I should use LOWER_ATTRS() for some lower attributes and not for others as it would be inconsistent and could also cause confusion.",
      "parentUuid": "7347c8c4_81a8842b",
      "range": {
        "startLine": 90,
        "startChar": 8,
        "endLine": 90,
        "endChar": 12
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc95c2b6_732a69bb",
        "filename": "lib/xlat/src/xlat_defs_private.h",
        "patchSetId": 16
      },
      "lineNbr": 102,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T15:13:22Z",
      "side": 1,
      "message": "nit: Add comment /* The output address MSB for non-LPA2 format */",
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30332f29_5d3c24d3",
        "filename": "lib/xlat/src/xlat_defs_private.h",
        "patchSetId": 16
      },
      "lineNbr": 102,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-19T18:32:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dc95c2b6_732a69bb",
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abc7d63d_2122028d",
        "filename": "lib/xlat/src/xlat_defs_private.h",
        "patchSetId": 16
      },
      "lineNbr": 119,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T15:13:22Z",
      "side": 1,
      "message": "...for 52-bit OA.\"",
      "range": {
        "startLine": 119,
        "startChar": 29,
        "endLine": 119,
        "endChar": 34
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8aba33c9_ad6af480",
        "filename": "lib/xlat/src/xlat_defs_private.h",
        "patchSetId": 16
      },
      "lineNbr": 119,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-19T18:32:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "abc7d63d_2122028d",
      "range": {
        "startLine": 119,
        "startChar": 29,
        "endLine": 119,
        "endChar": 34
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4af39e4d_2d70e4ab",
        "filename": "lib/xlat/src/xlat_defs_private.h",
        "patchSetId": 16
      },
      "lineNbr": 138,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T15:13:22Z",
      "side": 1,
      "message": "nit: ..from TTE\"",
      "range": {
        "startLine": 138,
        "startChar": 36,
        "endLine": 138,
        "endChar": 41
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0755d059_bf61f478",
        "filename": "lib/xlat/src/xlat_defs_private.h",
        "patchSetId": 16
      },
      "lineNbr": 138,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-19T18:32:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4af39e4d_2d70e4ab",
      "range": {
        "startLine": 138,
        "startChar": 36,
        "endLine": 138,
        "endChar": 41
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19240d34_d3d8abfd",
        "filename": "lib/xlat/src/xlat_defs_private.h",
        "patchSetId": 16
      },
      "lineNbr": 139,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T15:13:22Z",
      "side": 1,
      "message": "remove pointer.",
      "range": {
        "startLine": 139,
        "startChar": 23,
        "endLine": 139,
        "endChar": 24
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d4026d1_4a862ea2",
        "filename": "lib/xlat/src/xlat_defs_private.h",
        "patchSetId": 16
      },
      "lineNbr": 139,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-19T18:32:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "19240d34_d3d8abfd",
      "range": {
        "startLine": 139,
        "startChar": 23,
        "endLine": 139,
        "endChar": 24
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "404c44ac_abaae177",
        "filename": "lib/xlat/src/xlat_defs_private.h",
        "patchSetId": 16
      },
      "lineNbr": 145,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T15:13:22Z",
      "side": 1,
      "message": "oa \u003d tte \u0026 BIT_MASK_ULL() looks better.",
      "range": {
        "startLine": 144,
        "startChar": 2,
        "endLine": 145,
        "endChar": 12
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05317b00_95fb37d3",
        "filename": "lib/xlat/src/xlat_defs_private.h",
        "patchSetId": 16
      },
      "lineNbr": 145,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-19T18:32:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "404c44ac_abaae177",
      "range": {
        "startLine": 144,
        "startChar": 2,
        "endLine": 145,
        "endChar": 12
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e44a16e9_24640f50",
        "filename": "lib/xlat/src/xlat_defs_private.h",
        "patchSetId": 16
      },
      "lineNbr": 149,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T15:13:22Z",
      "side": 1,
      "message": "oa \u003d tte \u0026 BIT_MASK_ULL() looks better.",
      "range": {
        "startLine": 148,
        "startChar": 2,
        "endLine": 149,
        "endChar": 12
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "449cd16b_cbcd341c",
        "filename": "lib/xlat/src/xlat_defs_private.h",
        "patchSetId": 16
      },
      "lineNbr": 149,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-19T18:32:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e44a16e9_24640f50",
      "range": {
        "startLine": 148,
        "startChar": 2,
        "endLine": 149,
        "endChar": 12
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ea01445_8dcafd33",
        "filename": "lib/xlat/src/xlat_defs_private.h",
        "patchSetId": 16
      },
      "lineNbr": 151,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T15:13:22Z",
      "side": 1,
      "message": "`return oa` is enough.",
      "range": {
        "startLine": 151,
        "startChar": 1,
        "endLine": 151,
        "endChar": 30
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d543185_7383b4c4",
        "filename": "lib/xlat/src/xlat_defs_private.h",
        "patchSetId": 16
      },
      "lineNbr": 151,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-19T18:32:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3ea01445_8dcafd33",
      "range": {
        "startLine": 151,
        "startChar": 1,
        "endLine": 151,
        "endChar": 30
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6d82566_23c3bb75",
        "filename": "lib/xlat/src/xlat_tables_arch.c",
        "patchSetId": 16
      },
      "lineNbr": 48,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T15:13:22Z",
      "side": 1,
      "message": "this can be uint64_t",
      "range": {
        "startLine": 48,
        "startChar": 7,
        "endLine": 48,
        "endChar": 25
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89d7c5e1_71d431b0",
        "filename": "lib/xlat/src/xlat_tables_arch.c",
        "patchSetId": 16
      },
      "lineNbr": 48,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-19T18:32:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a6d82566_23c3bb75",
      "range": {
        "startLine": 48,
        "startChar": 7,
        "endLine": 48,
        "endChar": 25
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e1be0ed_4e81e6a5",
        "filename": "lib/xlat/src/xlat_tables_arch.c",
        "patchSetId": 16
      },
      "lineNbr": 102,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T15:13:22Z",
      "side": 1,
      "message": "uint64_t",
      "range": {
        "startLine": 102,
        "startChar": 1,
        "endLine": 102,
        "endChar": 19
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "834ce84c_fa269b57",
        "filename": "lib/xlat/src/xlat_tables_arch.c",
        "patchSetId": 16
      },
      "lineNbr": 102,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-19T18:32:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e1be0ed_4e81e6a5",
      "range": {
        "startLine": 102,
        "startChar": 1,
        "endLine": 102,
        "endChar": 19
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c3e8959_2d1e841b",
        "filename": "lib/xlat/src/xlat_tables_core.c",
        "patchSetId": 16
      },
      "lineNbr": 358,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T15:13:22Z",
      "side": 1,
      "message": "there could be an issue here if a 52 bit address is assigned here.",
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99c60291_a859047e",
        "filename": "lib/xlat/src/xlat_tables_core.c",
        "patchSetId": 16
      },
      "lineNbr": 358,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-19T18:32:10Z",
      "side": 1,
      "message": "I don\u0027t understand exactly what do you mean. This function is able to handle either addresses up to 52 bits wide (when FEAT_LPA2 is enabled).",
      "parentUuid": "3c3e8959_2d1e841b",
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16bf8c3b_011ec028",
        "filename": "lib/xlat/src/xlat_tables_core.c",
        "patchSetId": 16
      },
      "lineNbr": 358,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T19:51:06Z",
      "side": 1,
      "message": "what I meant is, if a 52 bit address is passed to this function on a non LPA2 system, this function will end up setting bits 49 - 52 in TTE which is wrong. But the caller will not do this and hence this is probably OK.\n\n\nFor complete correctness, this can be written this way:\n\nuint64_t tte;\n\nif (is_feat_lpa2_4k_present() \u003d\u003d true) {\n  tte \u003d output_addr \u0026 BIT_MASK_ULL(TTE_OA_BIT_49_LPA2, OA_ADDR_SHIFT);\n  tte |\u003d INPLACE(TTE_OA_BITS_50_51, EXTRACT(OA_BITS_50_51, output_addr));\n} else {\n  tte \u003d output_addr \u0026 BIT_MASK_ULL(TTE_OA_ADDR_MSB, OA_ADDR_SHIFT);\n}",
      "parentUuid": "99c60291_a859047e",
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eba7a838_7cb9512f",
        "filename": "lib/xlat/src/xlat_tables_core.c",
        "patchSetId": 16
      },
      "lineNbr": 358,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-20T09:37:25Z",
      "side": 1,
      "message": "This function should never receive a 52 bits address if FEAT_LPA2 is not enabled. The mmap validation will fail in such case and the xlat library will never be successfully initialized.\n\nDuring mmap validation, at initialization stage, we check that the VAs and PAs of such mmap regions are within valid ranges. For the PA, we check against max PA supported by the architecture, which can never be 52 bits for a non-LPA2 system. On the other hand, if FEAT_LPA2 is supported (and therefore we support 52 bits), it will always be used, so there are no situations in which we can receive a 52 bit address with FEAT_LPA2 unsupported and/or disabled.\n\nThe original code in main branch which is replaced by a call to this new ancillary function (line 374 in main branch) just makes \u0027desc \u003d addr_pa\u0027, which is what this function does, but catering for the case of LPA2 as well. I tried to maintain this function as simple (and closer to the original code) as possible knowing all the assumptions so it wouldn\u0027t introduce much overhead.",
      "parentUuid": "16bf8c3b_011ec028",
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09860ae8_f7910afc",
        "filename": "lib/xlat/src/xlat_tables_core.c",
        "patchSetId": 16
      },
      "lineNbr": 365,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T15:13:22Z",
      "side": 1,
      "message": "is this correct ? I think TTE_OA_BITS_50_51_MASK",
      "range": {
        "startLine": 365,
        "startChar": 0,
        "endLine": 365,
        "endChar": 29
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "74e38f82_29b70e65",
        "filename": "lib/xlat/src/xlat_tables_core.c",
        "patchSetId": 16
      },
      "lineNbr": 365,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-19T18:32:10Z",
      "side": 1,
      "message": "It is correct: bits 51 and 52 on the TTE must be 0, as the MSB are stored in bits [9:8] of the TTE. What I forgot here was to clean the latter as well. Done now.",
      "parentUuid": "09860ae8_f7910afc",
      "range": {
        "startLine": 365,
        "startChar": 0,
        "endLine": 365,
        "endChar": 29
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7262f64_eccda5da",
        "filename": "lib/xlat/src/xlat_tables_core.c",
        "patchSetId": 16
      },
      "lineNbr": 394,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T15:34:58Z",
      "side": 1,
      "message": "this should be an assert.",
      "range": {
        "startLine": 388,
        "startChar": 0,
        "endLine": 394,
        "endChar": 0
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d715d441_53082aac",
        "filename": "lib/xlat/src/xlat_tables_core.c",
        "patchSetId": 16
      },
      "lineNbr": 394,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-19T18:32:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7262f64_eccda5da",
      "range": {
        "startLine": 388,
        "startChar": 0,
        "endLine": 394,
        "endChar": 0
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56ea2f5a_0b042a65",
        "filename": "lib/xlat/src/xlat_tables_core.c",
        "patchSetId": 16
      },
      "lineNbr": 401,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T15:13:22Z",
      "side": 1,
      "message": "remove. The caller is supposed to validate the PA before calling this.",
      "range": {
        "startLine": 396,
        "startChar": 0,
        "endLine": 401,
        "endChar": 0
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f4ad967_02e95b31",
        "filename": "lib/xlat/src/xlat_tables_core.c",
        "patchSetId": 16
      },
      "lineNbr": 401,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T15:34:58Z",
      "side": 1,
      "message": "I think, this function need not worry whether PA is supported by architecture. This is an internal API and the callers are takin care. Would like to avoid adding more panic() in code.",
      "parentUuid": "56ea2f5a_0b042a65",
      "range": {
        "startLine": 396,
        "startChar": 0,
        "endLine": 401,
        "endChar": 0
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec861051_50605630",
        "filename": "lib/xlat/src/xlat_tables_core.c",
        "patchSetId": 16
      },
      "lineNbr": 401,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-19T18:32:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f4ad967_02e95b31",
      "range": {
        "startLine": 396,
        "startChar": 0,
        "endLine": 401,
        "endChar": 0
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e69f7241_d84845f2",
        "filename": "lib/xlat/src/xlat_tables_core.c",
        "patchSetId": 16
      },
      "lineNbr": 486,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T15:13:22Z",
      "side": 1,
      "message": "Is it the same macro for TCR and Desc ?",
      "range": {
        "startLine": 486,
        "startChar": 46,
        "endLine": 486,
        "endChar": 49
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ad900d9_4b1017f4",
        "filename": "lib/xlat/src/xlat_tables_core.c",
        "patchSetId": 16
      },
      "lineNbr": 486,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-19T18:32:10Z",
      "side": 1,
      "message": "Yes, the meaning of the field is the same, only the location changes.",
      "parentUuid": "e69f7241_d84845f2",
      "range": {
        "startLine": 486,
        "startChar": 46,
        "endLine": 486,
        "endChar": 49
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71aa89d9_aa346b82",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 16
      },
      "lineNbr": 516,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T15:13:22Z",
      "side": 1,
      "message": "This can just check whether level \u003e\u003d -1 as llt is already validated.",
      "range": {
        "startLine": 514,
        "startChar": 1,
        "endLine": 516,
        "endChar": 32
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "607101b1_2385405f",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 16
      },
      "lineNbr": 516,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-19T18:32:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "71aa89d9_aa346b82",
      "range": {
        "startLine": 514,
        "startChar": 1,
        "endLine": 516,
        "endChar": 32
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ee715b9_e56dfcd3",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 16
      },
      "lineNbr": 525,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T15:13:22Z",
      "side": 1,
      "message": "I am wondering whether this API needs to return error for VA if not present on table. This will make this API more efficient.",
      "range": {
        "startLine": 525,
        "startChar": 24,
        "endLine": 525,
        "endChar": 28
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76616f56_f0cb37d8",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 16
      },
      "lineNbr": 525,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-06-19T18:32:10Z",
      "side": 1,
      "message": "If we convert the check into an assert, I guess we can just return \u0026llt-\u003etable[index] ?",
      "parentUuid": "6ee715b9_e56dfcd3",
      "range": {
        "startLine": 525,
        "startChar": 24,
        "endLine": 525,
        "endChar": 28
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0dc9c577_b2583db4",
        "filename": "lib/xlat/src/xlat_tables_utils.c",
        "patchSetId": 16
      },
      "lineNbr": 525,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-19T19:24:10Z",
      "side": 1,
      "message": "yes, the API contract will have to change and all other callers will have to ensure that VA is actually a verified one (which I think it is). This can be a optimization for later.",
      "parentUuid": "76616f56_f0cb37d8",
      "range": {
        "startLine": 525,
        "startChar": 24,
        "endLine": 525,
        "endChar": 28
      },
      "revId": "a916364aa9e786c24bf62b872841ffd16180f077",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}