{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0b7b1acf_f1047164",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-18T14:08:09Z",
      "side": 1,
      "message": "please add unit (elements)",
      "range": {
        "startLine": 9,
        "startChar": 69,
        "endLine": 9,
        "endChar": 70
      },
      "revId": "a27d85f263105f08ecad50260940a3d82ddd0824",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d77c7687_db773600",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-06-18T23:50:59Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "0b7b1acf_f1047164",
      "range": {
        "startLine": 9,
        "startChar": 69,
        "endLine": 9,
        "endChar": 70
      },
      "revId": "a27d85f263105f08ecad50260940a3d82ddd0824",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51d77538_39c2a1fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-18T14:08:09Z",
      "side": 1,
      "message": "Thanks for contributing to TF-RMM.",
      "revId": "a27d85f263105f08ecad50260940a3d82ddd0824",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9807de96_c776fec6",
        "filename": "lib/queue/include/queue.h",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-18T14:08:09Z",
      "side": 1,
      "message": "This library would be a very good candidate for unit testing. Would it be possible to add some testcases?",
      "revId": "a27d85f263105f08ecad50260940a3d82ddd0824",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f37775c3_17eb614d",
        "filename": "lib/queue/include/queue.h",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-06-19T04:40:29Z",
      "side": 1,
      "message": "agree. will push patch and provide link. will keep it as a separate patch.",
      "parentUuid": "9807de96_c776fec6",
      "revId": "a27d85f263105f08ecad50260940a3d82ddd0824",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e9e0c7b_5969e60d",
        "filename": "lib/queue/include/queue.h",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-06-19T04:40:47Z",
      "side": 1,
      "message": "https://review.trustedfirmware.org/c/TF-RMM/tf-rmm/+/29498/1",
      "parentUuid": "f37775c3_17eb614d",
      "revId": "a27d85f263105f08ecad50260940a3d82ddd0824",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b28ba6a0_bc5cf8b2",
        "filename": "lib/queue/include/queue.h",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-19T09:45:13Z",
      "side": 1,
      "message": "Thanks, I\u0027ll have a look at the new patch",
      "parentUuid": "2e9e0c7b_5969e60d",
      "revId": "a27d85f263105f08ecad50260940a3d82ddd0824",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce62828e_99539cce",
        "filename": "lib/queue/include/queue.h",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-18T14:08:09Z",
      "side": 1,
      "message": "Please add something along the lines:\n - The capacity of the queue is restricted to be power of 2\n - The elements are stored in fixed size slots.",
      "range": {
        "startLine": 13,
        "startChar": 24,
        "endLine": 13,
        "endChar": 25
      },
      "revId": "a27d85f263105f08ecad50260940a3d82ddd0824",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f4da24c_4cf2e3b0",
        "filename": "lib/queue/include/queue.h",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-06-18T23:50:59Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "ce62828e_99539cce",
      "range": {
        "startLine": 13,
        "startChar": 24,
        "endLine": 13,
        "endChar": 25
      },
      "revId": "a27d85f263105f08ecad50260940a3d82ddd0824",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "105886f8_ebf690af",
        "filename": "lib/queue/include/queue.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-18T14:08:09Z",
      "side": 1,
      "message": "This field seems to be unused",
      "range": {
        "startLine": 31,
        "startChar": 15,
        "endLine": 31,
        "endChar": 27
      },
      "revId": "a27d85f263105f08ecad50260940a3d82ddd0824",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b13193d7_2a663b1e",
        "filename": "lib/queue/include/queue.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-06-18T23:50:59Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "105886f8_ebf690af",
      "range": {
        "startLine": 31,
        "startChar": 15,
        "endLine": 31,
        "endChar": 27
      },
      "revId": "a27d85f263105f08ecad50260940a3d82ddd0824",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af8e663d_56c995ae",
        "filename": "lib/queue/include/queue.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-18T14:08:09Z",
      "side": 1,
      "message": "Please add documentation to the functions",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 52,
        "endChar": 16
      },
      "revId": "a27d85f263105f08ecad50260940a3d82ddd0824",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38fa7145_2a271c57",
        "filename": "lib/queue/include/queue.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-06-18T23:50:59Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "af8e663d_56c995ae",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 52,
        "endChar": 16
      },
      "revId": "a27d85f263105f08ecad50260940a3d82ddd0824",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98b031a0_71b4a047",
        "filename": "lib/queue/src/queue.c",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-18T14:08:09Z",
      "side": 1,
      "message": "I guess this condition is here to check that capacity is power of 2. However the condition evaluates false if q-\u003ecapacity is 0, enabling a queue with capacity \u003d\u003d 0. Is this intended?",
      "range": {
        "startLine": 26,
        "startChar": 6,
        "endLine": 26,
        "endChar": 38
      },
      "revId": "a27d85f263105f08ecad50260940a3d82ddd0824",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37c3ef61_564f1023",
        "filename": "lib/queue/src/queue.c",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-06-18T23:50:59Z",
      "side": 1,
      "message": "i think line 21 ensures capacity is not 0 and this condition should be avoided.",
      "parentUuid": "98b031a0_71b4a047",
      "range": {
        "startLine": 26,
        "startChar": 6,
        "endLine": 26,
        "endChar": 38
      },
      "revId": "a27d85f263105f08ecad50260940a3d82ddd0824",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ecbe7d8c_1d94fa1a",
        "filename": "lib/queue/src/queue.c",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-19T09:45:13Z",
      "side": 1,
      "message": "That\u0027s true, I missed that",
      "parentUuid": "37c3ef61_564f1023",
      "range": {
        "startLine": 26,
        "startChar": 6,
        "endLine": 26,
        "endChar": 38
      },
      "revId": "a27d85f263105f08ecad50260940a3d82ddd0824",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eab7ccb3_8e1eae64",
        "filename": "lib/queue/src/queue.c",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-18T14:08:09Z",
      "side": 1,
      "message": "An assert could be added that can detect push or pop under some circumstances (I think all the cases when the number of pushes and pops to/from the queue are not the same, but I didn\u0027t prove it):\n\n    assert(((iter-\u003eindex + iter-\u003eremaining) \u0026 (iter-\u003eq-\u003ecapacity - 1)) \u003d\u003d \n           ((iter-\u003eq-\u003eread + iter-\u003eq-\u003eelement_size) \u0026 (iter-\u003eq-\u003ecapacity - 1)));",
      "revId": "a27d85f263105f08ecad50260940a3d82ddd0824",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b7edf23_15a247c8",
        "filename": "lib/queue/src/queue.c",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-06-18T23:50:59Z",
      "side": 1,
      "message": "not sure i follow the ask. The contract, as described on line 113 (and now added to queue.h ;)) is that there are no queue modifications when using the iterator. it would be invalid to use it and i dont think there is a point int detecting that?",
      "parentUuid": "eab7ccb3_8e1eae64",
      "revId": "a27d85f263105f08ecad50260940a3d82ddd0824",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5edee7ed_fc660116",
        "filename": "lib/queue/src/queue.c",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-19T09:45:13Z",
      "side": 1,
      "message": "The way I see this is what asserts are for. As it is against the contract, this thing shouldn\u0027t be checked on normal operation, and have a dedicated error returned for. \nHowever if (for any reason) there is a programmer error and the library is misused, then it can become handy if the misuse is detected here instead of having a potential crash somewhere else in the code that is for example processing an uninitialized element that have been obtained from a misused iterator.\nAnd asserts are excluded from a release build, so it doesn\u0027t affect performance on the field.",
      "parentUuid": "6b7edf23_15a247c8",
      "revId": "a27d85f263105f08ecad50260940a3d82ddd0824",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df2308d0_f78573a1",
        "filename": "lib/queue/src/queue.c",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-06-19T14:19:47Z",
      "side": 1,
      "message": "oh, agree with the intent. should have been clearer. I\u0027m not following what asserts you want me to add. Something that indicates that there were no elements added or removed when the iterator was in use? or something else?",
      "parentUuid": "5edee7ed_fc660116",
      "revId": "a27d85f263105f08ecad50260940a3d82ddd0824",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc7f6b9b_bb9ea264",
        "filename": "lib/queue/src/queue.c",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-19T14:31:51Z",
      "side": 1,
      "message": "Oh, Ok. Yes, My intention was to add an assertion that fails if the queue is modified while the iterator is in use. \nI believe the assert instruction I quoted in the first comment can detect if the number of items in the queue changed. I think this is the strongest check we can do with the data that is currently in the iterator.",
      "parentUuid": "df2308d0_f78573a1",
      "revId": "a27d85f263105f08ecad50260940a3d82ddd0824",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}