{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a3ea177e_1b57b753",
        "filename": ".clang-tidy",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2023-10-11T16:04:33Z",
      "side": 1,
      "message": "Will this only check file starting with this regex?\nMaybe we can add a comment..",
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8dff99f9_28280f82",
        "filename": ".clang-tidy",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-10-13T03:29:14Z",
      "side": 1,
      "message": "Can we add lib as well ? Or does it throw out too many errors ?",
      "parentUuid": "a3ea177e_1b57b753",
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ffb7baf_4d7e1a0b",
        "filename": ".clang-tidy",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1001107
      },
      "writtenOn": "2023-10-13T14:44:41Z",
      "side": 1,
      "message": "clang-tidy will only output warnings from \\*.h files matching this regex. It doesn\u0027t affect which *.c files it checks. I have expanded the comment explaining this and interspersed the comments throughout the file so it\u0027s clearer.\n\nIt is definitely possible to add lib to this. I checked how many warnings and errors clang-tidy outputs when lib is excluded/included. For build with fvp_defcfg:\n- no lib in HeaderFilterRegex: 16 warnings, 0 errors\n- lib in HeaderFilterRegex: 904 warnings, 17 errors\n\nSo it would increase the number of warnings/errors substantially. But I think we can add it if you think it would be good, as 17 errors definitely seems fixable.",
      "parentUuid": "a3ea177e_1b57b753",
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca9a808e_6fe64e96",
        "filename": ".clang-tidy",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-10-13T15:38:40Z",
      "side": 1,
      "message": "Given the importance of lib, lets add it to the check and fix the errors if possible.",
      "parentUuid": "7ffb7baf_4d7e1a0b",
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c865eb5e_9d21c020",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2023-10-11T16:04:33Z",
      "side": 1,
      "message": "nit: ,",
      "range": {
        "startLine": 13,
        "startChar": 31,
        "endLine": 13,
        "endChar": 39
      },
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c35dd6b_5ff46a21",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1001107
      },
      "writtenOn": "2023-10-13T14:44:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c865eb5e_9d21c020",
      "range": {
        "startLine": 13,
        "startChar": 31,
        "endLine": 13,
        "endChar": 39
      },
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b940d146_71bc889d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2023-10-11T16:04:33Z",
      "side": 1,
      "message": "Looks good overall, few minor comments..",
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2cfade4_44465d59",
        "filename": "CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 194,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-10-13T03:29:14Z",
      "side": 1,
      "message": "I am beginning to think we should move all tool build targets to a cmakefile in tools/ directory.\n\nMaybe that can be a patch on top of this one.",
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9cb6a8d_a2fa5fb0",
        "filename": "CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 194,
      "author": {
        "id": 1001107
      },
      "writtenOn": "2023-10-13T14:44:41Z",
      "side": 1,
      "message": "That seems like a good idea. There is a CMakeLists.txt in the tools/ directory but currently it just has some stuff for cppcheck.",
      "parentUuid": "e2cfade4_44465d59",
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83fafb5a_3bde06fc",
        "filename": "CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2023-10-11T16:04:33Z",
      "side": 1,
      "message": "Can you also update the documentation and add this target. Similar to https://git.trustedfirmware.org/TF-RMM/tf-rmm.git/tree/docs/getting_started/build-options.rst#n119",
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af66b89e_32df9142",
        "filename": "CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1001107
      },
      "writtenOn": "2023-10-13T14:44:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "83fafb5a_3bde06fc",
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f9537e8_7209f397",
        "filename": "tools/clang-tidy/clang-tidy.cmake",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2023-10-11T16:04:33Z",
      "side": 1,
      "message": "This variable is not used, may be use this is run_clangtidy()?",
      "range": {
        "startLine": 15,
        "startChar": 13,
        "endLine": 15,
        "endChar": 36
      },
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "318e7185_984def46",
        "filename": "tools/clang-tidy/clang-tidy.cmake",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1001107
      },
      "writtenOn": "2023-10-13T14:44:41Z",
      "side": 1,
      "message": "Good catch - forgot to replace the hardcoded executable name with this variable.",
      "parentUuid": "0f9537e8_7209f397",
      "range": {
        "startLine": 15,
        "startChar": 13,
        "endLine": 15,
        "endChar": 36
      },
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a31cb43_89832eb1",
        "filename": "tools/clang-tidy/clang-tidy.cmake",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-10-13T03:29:14Z",
      "side": 1,
      "message": "we should be including lib ideally.",
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f186252_e5f26fc2",
        "filename": "tools/clang-tidy/clang-tidy.cmake",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1001107
      },
      "writtenOn": "2023-10-13T14:44:41Z",
      "side": 1,
      "message": "Similarly to above, I did an experiment to see how many warnings/errors this would add. Using fvp_defcfg:\n- lib/ excluded: 16 warnings, 0 errors\n- lib/ included: 65 warnings, 2 errors\n\nThat doesn\u0027t seem too bad so I think we could definitely include lib/ if you think it would be better to?",
      "parentUuid": "9a31cb43_89832eb1",
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1d61588_71d593ae",
        "filename": "tools/clang-tidy/clang-tidy.cmake",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-10-13T15:38:40Z",
      "side": 1,
      "message": "Yes, lets add lib.",
      "parentUuid": "5f186252_e5f26fc2",
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f824590e_928ee495",
        "filename": "tools/clang-tidy/clang-tidy.cmake",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-10-13T03:29:14Z",
      "side": 1,
      "message": "use \"message()\" here to print ?",
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8fd1f690_7117d051",
        "filename": "tools/clang-tidy/clang-tidy.cmake",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 1001107
      },
      "writtenOn": "2023-10-13T14:44:41Z",
      "side": 1,
      "message": "Thanks, good point. I copied this from CheckPatch.cmake, not sure if there\u0027s any reason this was used instead of message(). I have changed it to message() here as the behaviour seems the same.",
      "parentUuid": "f824590e_928ee495",
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6208660_ae9c81d0",
        "filename": "tools/clang-tidy/clang-tidy.cmake",
        "patchSetId": 3
      },
      "lineNbr": 167,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2023-10-11T16:04:33Z",
      "side": 1,
      "message": "Path to build directory as \u0027build\u0027 can\u0027t be hard-coded.\nI think you can get the build path from a Cmake variable.",
      "range": {
        "startLine": 167,
        "startChar": 0,
        "endLine": 167,
        "endChar": 54
      },
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "411ed554_f2682fdc",
        "filename": "tools/clang-tidy/clang-tidy.cmake",
        "patchSetId": 3
      },
      "lineNbr": 167,
      "author": {
        "id": 1001107
      },
      "writtenOn": "2023-10-13T14:44:41Z",
      "side": 1,
      "message": "Thanks, good point. Turns out I can\u0027t get the build path from the CMake variable for various reasons but managed to work around it by passing it through to this .cmake file.",
      "parentUuid": "c6208660_ae9c81d0",
      "range": {
        "startLine": 167,
        "startChar": 0,
        "endLine": 167,
        "endChar": 54
      },
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b542208e_e19a4a96",
        "filename": "tools/clang-tidy/clang-tidy.cmake",
        "patchSetId": 3
      },
      "lineNbr": 207,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2023-10-11T16:04:33Z",
      "side": 1,
      "message": "Same comment as #167",
      "range": {
        "startLine": 207,
        "startChar": 0,
        "endLine": 207,
        "endChar": 54
      },
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21c7372a_b524eed9",
        "filename": "tools/clang-tidy/clang-tidy.cmake",
        "patchSetId": 3
      },
      "lineNbr": 207,
      "author": {
        "id": 1001107
      },
      "writtenOn": "2023-10-13T14:44:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b542208e_e19a4a96",
      "range": {
        "startLine": 207,
        "startChar": 0,
        "endLine": 207,
        "endChar": 54
      },
      "revId": "c35c89d24135068568050cadd310e9fa8a26c01e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}