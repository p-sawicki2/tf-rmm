{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a31bcd1a_f6cc6212",
        "filename": "lib/rmm_el3_ifc/include/rmm_el3_ifc.h",
        "patchSetId": 11
      },
      "lineNbr": 314,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-09-04T08:15:47Z",
      "side": 1,
      "message": "This seems to be a bit misleading. To me this suggests that the buffer must be locked when calling this function, while the locking seems to be done by the function itself.",
      "range": {
        "startLine": 313,
        "startChar": 28,
        "endLine": 314,
        "endChar": 16
      },
      "revId": "9fc3864b8dc73c0301d53bfc5907db2cf9af9dc2",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "661ff155_ea9df4e3",
        "filename": "lib/rmm_el3_ifc/include/rmm_el3_ifc.h",
        "patchSetId": 11
      },
      "lineNbr": 314,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-09-04T08:31:44Z",
      "side": 1,
      "message": "The buffer should be locked by caller for this API. \n\nMaybe you are referring to attest_setup_platform_token() which calls this API and indeed does the locking before the call.",
      "parentUuid": "a31bcd1a_f6cc6212",
      "range": {
        "startLine": 313,
        "startChar": 28,
        "endLine": 314,
        "endChar": 16
      },
      "revId": "9fc3864b8dc73c0301d53bfc5907db2cf9af9dc2",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efd3467e_98d1e25b",
        "filename": "lib/rmm_el3_ifc/include/rmm_el3_ifc.h",
        "patchSetId": 11
      },
      "lineNbr": 314,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-09-04T08:38:59Z",
      "side": 1,
      "message": "Oh, That\u0027s right, I missed that",
      "parentUuid": "661ff155_ea9df4e3",
      "range": {
        "startLine": 313,
        "startChar": 28,
        "endLine": 314,
        "endChar": 16
      },
      "revId": "9fc3864b8dc73c0301d53bfc5907db2cf9af9dc2",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "713ed513_5fb08389",
        "filename": "lib/rmm_el3_ifc/include/rmm_el3_ifc.h",
        "patchSetId": 11
      },
      "lineNbr": 315,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-09-04T08:15:47Z",
      "side": 1,
      "message": "Shared buffer size",
      "range": {
        "startLine": 315,
        "startChar": 13,
        "endLine": 315,
        "endChar": 24
      },
      "revId": "9fc3864b8dc73c0301d53bfc5907db2cf9af9dc2",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3834a11c_7e468491",
        "filename": "lib/rmm_el3_ifc/include/rmm_el3_ifc.h",
        "patchSetId": 11
      },
      "lineNbr": 315,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-09-04T08:31:44Z",
      "side": 1,
      "message": "The fact that this is a shared buffer is only known to caller. To this API, it is a buffer (already locked by caller if shared with other PEs). The buffer might as well be private in future.",
      "parentUuid": "713ed513_5fb08389",
      "range": {
        "startLine": 315,
        "startChar": 13,
        "endLine": 315,
        "endChar": 24
      },
      "revId": "9fc3864b8dc73c0301d53bfc5907db2cf9af9dc2",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9591720c_99296593",
        "filename": "lib/rmm_el3_ifc/include/rmm_el3_ifc.h",
        "patchSetId": 11
      },
      "lineNbr": 315,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-09-04T08:38:59Z",
      "side": 1,
      "message": "Ok",
      "parentUuid": "3834a11c_7e468491",
      "range": {
        "startLine": 315,
        "startChar": 13,
        "endLine": 315,
        "endChar": 24
      },
      "revId": "9fc3864b8dc73c0301d53bfc5907db2cf9af9dc2",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6763485_b43c4eb6",
        "filename": "lib/rmm_el3_ifc/include/rmm_el3_ifc.h",
        "patchSetId": 11
      },
      "lineNbr": 339,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-09-04T08:15:47Z",
      "side": 1,
      "message": "I usually see that output arguments are grouped towards the end of the parameter list. I can\u0027t think of any reason why mixing input and output arguments would be a bad thing, but I think this is being avoided in RMM.\n\nSo I would recommend a signature like \n\n     int rmm_el3_ifc_get_platform_token(uintptr_t buf, size_t buflen,\n                                        size_t hash_size,\n                                        size_t *token_hunk_len,\n                                        size_t *remaining_len);",
      "range": {
        "startLine": 337,
        "startChar": 0,
        "endLine": 339,
        "endChar": 26
      },
      "revId": "9fc3864b8dc73c0301d53bfc5907db2cf9af9dc2",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b8f8d17_9379a1ec",
        "filename": "lib/rmm_el3_ifc/include/rmm_el3_ifc.h",
        "patchSetId": 11
      },
      "lineNbr": 339,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-09-04T08:31:44Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "c6763485_b43c4eb6",
      "range": {
        "startLine": 337,
        "startChar": 0,
        "endLine": 339,
        "endChar": 26
      },
      "revId": "9fc3864b8dc73c0301d53bfc5907db2cf9af9dc2",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7fb2512_9fc2a72a",
        "filename": "lib/rmm_el3_ifc/include/rmm_el3_ifc.h",
        "patchSetId": 11
      },
      "lineNbr": 339,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2024-09-04T15:39:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b8f8d17_9379a1ec",
      "range": {
        "startLine": 337,
        "startChar": 0,
        "endLine": 339,
        "endChar": 26
      },
      "revId": "9fc3864b8dc73c0301d53bfc5907db2cf9af9dc2",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efa2bb46_eadf2073",
        "filename": "plat/host/common/src/host_harness_cmn.c",
        "patchSetId": 11
      },
      "lineNbr": 230,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-09-04T08:15:47Z",
      "side": 1,
      "message": "I understand that this is correct, however feels very strange to read. It provides the impression that passing arg3 and arg4 here will automatically handle returning the values, while it doesn\u0027t, and res-\u003ex[1..2] needs to be set manually. \n\nI would suggest declaring local variables `token_hunk_size` and `remaining_len` and using them here.",
      "range": {
        "startLine": 230,
        "startChar": 10,
        "endLine": 230,
        "endChar": 22
      },
      "revId": "9fc3864b8dc73c0301d53bfc5907db2cf9af9dc2",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b33abea9_00a14099",
        "filename": "plat/host/common/src/host_harness_cmn.c",
        "patchSetId": 11
      },
      "lineNbr": 230,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2024-09-04T15:39:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "efa2bb46_eadf2073",
      "range": {
        "startLine": 230,
        "startChar": 10,
        "endLine": 230,
        "endChar": 22
      },
      "revId": "9fc3864b8dc73c0301d53bfc5907db2cf9af9dc2",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}