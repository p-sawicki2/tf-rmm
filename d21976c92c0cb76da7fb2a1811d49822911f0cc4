{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "815919c6_f10e0827",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-17T09:25:53Z",
      "side": 1,
      "message": "Triggered rmm-main CI job as well : https://jenkins.openci.aws.arm.com/view/RMM/job/rmm-main/722/",
      "revId": "d21976c92c0cb76da7fb2a1811d49822911f0cc4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16dacde7_1841e673",
        "filename": "docs/design/cold-and-warm-boot-design.rst",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-17T10:31:21Z",
      "side": 1,
      "message": "\"caches enabled\" can be controversial. Speaking in architectural terms, the caches cannot be disabled. Hence the preference to use the term \"cacheability enabled/disabled\".",
      "range": {
        "startLine": 40,
        "startChar": 16,
        "endLine": 40,
        "endChar": 23
      },
      "revId": "d21976c92c0cb76da7fb2a1811d49822911f0cc4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d92c84d_7be01e94",
        "filename": "docs/design/cold-and-warm-boot-design.rst",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-07-17T13:57:00Z",
      "side": 1,
      "message": "agree. changed.",
      "parentUuid": "16dacde7_1841e673",
      "range": {
        "startLine": 40,
        "startChar": 16,
        "endLine": 40,
        "endChar": 23
      },
      "revId": "d21976c92c0cb76da7fb2a1811d49822911f0cc4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9909256f_7a3a1980",
        "filename": "docs/design/cold-and-warm-boot-design.rst",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-17T10:31:21Z",
      "side": 1,
      "message": "After the discussion on Raghu\u0027s comment, perhaps this can be reworded as :\n\n\"Any function in RMM which is invoked prior to MMU enable needs to perform CMOs on any data modified which is not part of the C runtime stack in the RMM. During cold boot, the primary CPU is allowed to modify global data with MMU disabled. During warm boot, the secondary CPUs are only allowed to modify per-cpu data with MMU disabled and reads to global data should be restricted to ones which have had appropriate CMOs done by the primary.\"\n\n\nDoes that clarify better?",
      "range": {
        "startLine": 46,
        "startChar": 5,
        "endLine": 49,
        "endChar": 47
      },
      "revId": "d21976c92c0cb76da7fb2a1811d49822911f0cc4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}