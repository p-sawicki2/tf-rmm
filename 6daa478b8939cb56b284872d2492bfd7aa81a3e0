{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1c936641_8dc5a96a",
        "filename": "plat/host/CMakeLists.txt",
        "patchSetId": 8
      },
      "lineNbr": 11,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-12T12:36:29Z",
      "side": 1,
      "message": "there should be a single \n\n    STRINGS \"host_build\" \"host_test\" \"host_cbmc\" \"host_ns_smc_fuzzer\"\n\nline",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 11,
        "endChar": 57
      },
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "239ceb4b_537de80a",
        "filename": "plat/host/CMakeLists.txt",
        "patchSetId": 8
      },
      "lineNbr": 11,
      "author": {
        "id": 1000948
      },
      "writtenOn": "2024-06-13T12:25:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1c936641_8dc5a96a",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 11,
        "endChar": 57
      },
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e921767_82c1c5b6",
        "filename": "plat/host/host_ns_smc_fuzzer/README.md",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-12T12:36:29Z",
      "side": 1,
      "message": "Please add this document to the document hiersrchy as a `.rst` document file in docs/resources/application-notes/",
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62db696b_de53d0ca",
        "filename": "plat/host/host_ns_smc_fuzzer/README.md",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000948
      },
      "writtenOn": "2024-06-17T15:48:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6e921767_82c1c5b6",
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c837767_c2cffe06",
        "filename": "plat/host/host_ns_smc_fuzzer/python/data_type.py",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-12T12:36:29Z",
      "side": 1,
      "message": "I would recommend to run pylint on the python scripts.",
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff2eb37e_25a38dd2",
        "filename": "plat/host/host_ns_smc_fuzzer/python/data_type.py",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000948
      },
      "writtenOn": "2024-06-13T12:25:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5c837767_c2cffe06",
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2583354_4b868387",
        "filename": "plat/host/host_ns_smc_fuzzer/python/data_type.py",
        "patchSetId": 8
      },
      "lineNbr": 21,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-12T12:36:29Z",
      "side": 1,
      "message": "This range allows ~80 possible values as fid, while there seems to be ~25 RMI calls (in 1.0-eac5 spec). This means that less than 1 third of the calls is going to have a valid FID. \nI was wondering would it worth creating a list of the valid FIDs (adding 1-2 invalid values as well) and RMMCall.random and RMMFuzzingInput.random could return an element at a random index. This could about triple the amount of calls that get past the FID check.\nAlthough one can argue that the FID check happens early, so not much time is wasted, and having a list of fids add maintenance bourden when the spec is updated. \nWhat is your opinion?",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 21,
        "endChar": 18
      },
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45d4625a_215c9bb3",
        "filename": "plat/host/host_ns_smc_fuzzer/python/data_type.py",
        "patchSetId": 8
      },
      "lineNbr": 21,
      "author": {
        "id": 1000948
      },
      "writtenOn": "2024-06-13T12:25:12Z",
      "side": 1,
      "message": "I have reviewed the spec. It looks like the valid or used FID is from 0x150 to 0x190. Note that, this is very likely a hint to fuzzing engine, while the engine has freedom to epxlore the value outside of the range we specified. This is truth even we provide a custom mutator.\n\nWe might be able to further restricts the mutator but I think it can be explore further once this minimum fuzzing merge is in the main repo.",
      "parentUuid": "c2583354_4b868387",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 21,
        "endChar": 18
      },
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a116654a_6bcd1c41",
        "filename": "plat/host/host_ns_smc_fuzzer/python/data_type.py",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-12T12:36:29Z",
      "side": 1,
      "message": "a list",
      "range": {
        "startLine": 25,
        "startChar": 54,
        "endLine": 25,
        "endChar": 62
      },
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a7acf85_a4438032",
        "filename": "plat/host/host_ns_smc_fuzzer/python/data_type.py",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 1000948
      },
      "writtenOn": "2024-06-13T12:25:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a116654a_6bcd1c41",
      "range": {
        "startLine": 25,
        "startChar": 54,
        "endLine": 25,
        "endChar": 62
      },
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb0cc51e_d803adc9",
        "filename": "plat/host/host_ns_smc_fuzzer/python/data_type.py",
        "patchSetId": 8
      },
      "lineNbr": 35,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-12T12:36:29Z",
      "side": 1,
      "message": "Add the decorator `@staticmethod`",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 35,
        "endChar": 18
      },
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08a85152_9b4ac9bc",
        "filename": "plat/host/host_ns_smc_fuzzer/python/data_type.py",
        "patchSetId": 8
      },
      "lineNbr": 35,
      "author": {
        "id": 1000948
      },
      "writtenOn": "2024-06-13T12:25:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb0cc51e_d803adc9",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 35,
        "endChar": 18
      },
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f645298e_5c9560e1",
        "filename": "plat/host/host_ns_smc_fuzzer/python/data_type.py",
        "patchSetId": 8
      },
      "lineNbr": 41,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-12T12:36:29Z",
      "side": 1,
      "message": "Add the decorator `@staticmethod`",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 41,
        "endChar": 15
      },
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ebee960_2a8723fa",
        "filename": "plat/host/host_ns_smc_fuzzer/python/data_type.py",
        "patchSetId": 8
      },
      "lineNbr": 41,
      "author": {
        "id": 1000948
      },
      "writtenOn": "2024-06-13T12:25:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f645298e_5c9560e1",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 41,
        "endChar": 15
      },
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa7c4aac_b105da78",
        "filename": "plat/host/host_ns_smc_fuzzer/python/data_type.py",
        "patchSetId": 8
      },
      "lineNbr": 51,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-12T12:36:29Z",
      "side": 1,
      "message": "`randint` \u0027end\u0027 parameter seems to be inclusive, so this should be `(2 ** register_size) - 1` instead.",
      "range": {
        "startLine": 51,
        "startChar": 33,
        "endLine": 51,
        "endChar": 51
      },
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e8128a3_748df440",
        "filename": "plat/host/host_ns_smc_fuzzer/python/data_type.py",
        "patchSetId": 8
      },
      "lineNbr": 51,
      "author": {
        "id": 1000948
      },
      "writtenOn": "2024-06-13T12:25:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa7c4aac_b105da78",
      "range": {
        "startLine": 51,
        "startChar": 33,
        "endLine": 51,
        "endChar": 51
      },
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ec77405_cf66b5d7",
        "filename": "plat/host/host_ns_smc_fuzzer/python/data_type.py",
        "patchSetId": 8
      },
      "lineNbr": 75,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-12T12:36:29Z",
      "side": 1,
      "message": "Add the decorator `@staticmethod`",
      "range": {
        "startLine": 75,
        "startChar": 4,
        "endLine": 75,
        "endChar": 18
      },
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad0e20a0_2179c50e",
        "filename": "plat/host/host_ns_smc_fuzzer/python/data_type.py",
        "patchSetId": 8
      },
      "lineNbr": 75,
      "author": {
        "id": 1000948
      },
      "writtenOn": "2024-06-13T12:25:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ec77405_cf66b5d7",
      "range": {
        "startLine": 75,
        "startChar": 4,
        "endLine": 75,
        "endChar": 18
      },
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6eeeddd0_4dfe600c",
        "filename": "plat/host/host_ns_smc_fuzzer/python/data_type.py",
        "patchSetId": 8
      },
      "lineNbr": 103,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-12T12:36:29Z",
      "side": 1,
      "message": "Add the decorator `@staticmethod`",
      "range": {
        "startLine": 103,
        "startChar": 4,
        "endLine": 103,
        "endChar": 15
      },
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "316eb9cd_074ec7a7",
        "filename": "plat/host/host_ns_smc_fuzzer/python/data_type.py",
        "patchSetId": 8
      },
      "lineNbr": 103,
      "author": {
        "id": 1000948
      },
      "writtenOn": "2024-06-13T12:25:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6eeeddd0_4dfe600c",
      "range": {
        "startLine": 103,
        "startChar": 4,
        "endLine": 103,
        "endChar": 15
      },
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2798655c_819c3b97",
        "filename": "plat/host/host_ns_smc_fuzzer/python/mutate.py",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-12T12:36:29Z",
      "side": 1,
      "message": "The constants should be imported from plat/host/host_ns_smc_fuzzer/python/data_type.py",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 25,
        "endChar": 26
      },
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f64f0a0_d8b25eeb",
        "filename": "plat/host/host_ns_smc_fuzzer/python/mutate.py",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-06-13T12:22:31Z",
      "side": 1,
      "message": "It seems that these defaults are also set in the the CMakeLists.txt that is calling the scripts. It would be nice if those could be somehow be passed to the python scripts. Passing these in the command line would result in a quite long parameter list, also generating a config file with CMake doesn\u0027t seem to be straightforward. Maybe the best would be to pass these through environment variables...",
      "parentUuid": "2798655c_819c3b97",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 25,
        "endChar": 26
      },
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f39e3516_18e56949",
        "filename": "plat/host/host_ns_smc_fuzzer/python/mutate.py",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 1000948
      },
      "writtenOn": "2024-06-13T12:25:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2798655c_819c3b97",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 25,
        "endChar": 26
      },
      "revId": "6daa478b8939cb56b284872d2492bfd7aa81a3e0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}