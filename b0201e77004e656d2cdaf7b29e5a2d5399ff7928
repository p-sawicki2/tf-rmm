{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4070fd63_653104a6",
        "filename": "docs/resources/application-notes/fuzzing.rst",
        "patchSetId": 26
      },
      "lineNbr": 12,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-10T16:56:42Z",
      "side": 1,
      "message": "we need not mandate lto. IN fact on my local build the afl-clang-lto is not being generated for some reason.",
      "range": {
        "startLine": 12,
        "startChar": 1,
        "endLine": 12,
        "endChar": 15
      },
      "revId": "b0201e77004e656d2cdaf7b29e5a2d5399ff7928",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3778d71c_69d5146f",
        "filename": "docs/resources/application-notes/fuzzing.rst",
        "patchSetId": 26
      },
      "lineNbr": 103,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-10T16:56:42Z",
      "side": 1,
      "message": "the general norm is the tools should be present in the PATH of the shell. The RMM CMake should find the appropriate tool and configure it automatically (using find_program()).\n\nI think generally if -DRMM_TOOLCHAIN\u003dllvm is specified, then fuzzer should try to use 1. afl-clang-lto or if not found 2. afl-clang-fast.\n\nif -DRMM_TOOLCHAIN\u003dgnu is specified, then fuzzer should try to use 1. afl-gcc-fast\n\nFor me , afl-gcc did not work some reason.",
      "range": {
        "startLine": 101,
        "startChar": 10,
        "endLine": 103,
        "endChar": 52
      },
      "revId": "b0201e77004e656d2cdaf7b29e5a2d5399ff7928",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7fce169_346cc945",
        "filename": "docs/resources/application-notes/fuzzing.rst",
        "patchSetId": 26
      },
      "lineNbr": 104,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-10T16:56:42Z",
      "side": 1,
      "message": "this should be provided to the build system via defines in cmakefile.",
      "range": {
        "startLine": 104,
        "startChar": 27,
        "endLine": 104,
        "endChar": 64
      },
      "revId": "b0201e77004e656d2cdaf7b29e5a2d5399ff7928",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2621d471_3dfe6276",
        "filename": "docs/resources/application-notes/fuzzing.rst",
        "patchSetId": 26
      },
      "lineNbr": 149,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-10T16:56:42Z",
      "side": 1,
      "message": "If these are AFL command line , can we provide an example on how to provide this via RMM build ?",
      "revId": "b0201e77004e656d2cdaf7b29e5a2d5399ff7928",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf6ac144_10583de4",
        "filename": "lib/arch/src/vmid.c",
        "patchSetId": 26
      },
      "lineNbr": 21,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-10T16:56:42Z",
      "side": 1,
      "message": "this change is not needed it seems",
      "revId": "b0201e77004e656d2cdaf7b29e5a2d5399ff7928",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b378b689_22d34cb1",
        "filename": "lib/attestation/src/attestation_key.c",
        "patchSetId": 26
      },
      "lineNbr": 110,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-10T16:56:42Z",
      "side": 1,
      "message": "I dont like this modification in code. It doesn\u0027t seem this code path is being invoked. In PERSISTENT mode, RMM is only booted once, so this overhead may not matter ?",
      "revId": "b0201e77004e656d2cdaf7b29e5a2d5399ff7928",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38385020_70fc0505",
        "filename": "lib/granule/src/granule.c",
        "patchSetId": 26
      },
      "lineNbr": 18,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-10T16:56:42Z",
      "side": 1,
      "message": "can implement a function to return a pointer to this struct rather than exporting this symbol.",
      "revId": "b0201e77004e656d2cdaf7b29e5a2d5399ff7928",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9fabb89_d195156f",
        "filename": "lib/t_cose/CMakeLists.txt",
        "patchSetId": 26
      },
      "lineNbr": 28,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-10T16:56:42Z",
      "side": 1,
      "message": "why is this added ?",
      "revId": "b0201e77004e656d2cdaf7b29e5a2d5399ff7928",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fa2280e_3d606e66",
        "filename": "plat/host/common/src/host_utils.c",
        "patchSetId": 26
      },
      "lineNbr": 28,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-10T16:56:42Z",
      "side": 1,
      "message": "can export a helper. I think the helper may already be present as part unit tests",
      "revId": "b0201e77004e656d2cdaf7b29e5a2d5399ff7928",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "582632d2_385893a1",
        "filename": "plat/host/host_fuzz/CMakeLists.txt",
        "patchSetId": 26
      },
      "lineNbr": 15,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-10T16:56:42Z",
      "side": 1,
      "message": "arm_config_option_override() should be used here. I suspect that is why this was not working.",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 17
      },
      "revId": "b0201e77004e656d2cdaf7b29e5a2d5399ff7928",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b64e8da_d38e0f29",
        "filename": "plat/host/host_fuzz/src/host_setup.c",
        "patchSetId": 26
      },
      "lineNbr": 160,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-10T16:56:42Z",
      "side": 1,
      "message": "is the non persistent mode tested ?",
      "revId": "b0201e77004e656d2cdaf7b29e5a2d5399ff7928",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}