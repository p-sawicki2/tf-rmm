{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "feafd7ec_95720ea9",
        "filename": "lib/xlat/src/xlat_tables_core.c",
        "patchSetId": 10
      },
      "lineNbr": 451,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-07-17T15:37:21Z",
      "side": 1,
      "message": "I think GP bit should be ORed here.",
      "range": {
        "startLine": 451,
        "startChar": 11,
        "endLine": 451,
        "endChar": 28
      },
      "revId": "fefe24b8fedc264b9d40ded38fc5491df4f70379",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb6c079c_f2240aa6",
        "filename": "lib/xlat/src/xlat_tables_core.c",
        "patchSetId": 10
      },
      "lineNbr": 451,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-07-18T05:01:09Z",
      "side": 1,
      "message": "Sorry, I misread this. Ignore previous comment.\n\nPerhaps these conditions can be re-written as:\n\n if (attr !\u003d CODE) {\n    assert(attr \u003d\u003d MT_RO_DATA || attr \u003d\u003d MT_RW_DATA);\n    desc |\u003d XLAT_GET_PXN_DESC();\n } else {\n    /* Set GP bit for block and page code entries for BTI */\n    desc |\u003d GP;\n }",
      "parentUuid": "feafd7ec_95720ea9",
      "range": {
        "startLine": 451,
        "startChar": 11,
        "endLine": 451,
        "endChar": 28
      },
      "revId": "fefe24b8fedc264b9d40ded38fc5491df4f70379",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0871ce5a_e5e2b0cd",
        "filename": "lib/xlat/src/xlat_tables_core.c",
        "patchSetId": 10
      },
      "lineNbr": 454,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-07-17T16:21:30Z",
      "side": 1,
      "message": "GP flag can be used in page descriptors (level 3) as well as block descriptors (levels 1 and 2) as they share the same Upper Attributes. Any reason why we only enable it for pages? (note that I am not very experienced with BTI)\n\nAlso, I think this code could be simplified as:\n\n\t\tif (((attr \u0026 MT_RW) !\u003d 0UL) || ((attr \u0026 MT_EXECUTE_NEVER) !\u003d 0UL)) {\n\t\t\tdesc |\u003d XLAT_GET_PXN_DESC();\n\t\t} else {\n\t\t\tif (level \u003d\u003d XLAT_TABLE_LEVEL_MAX) {\n\t\t\t\t/* Set GP bit for block and page code entries for BTI */\n\t\t\t\tdesc |\u003d GP;\n\t\t\t}\n\t\t}",
      "revId": "fefe24b8fedc264b9d40ded38fc5491df4f70379",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2588486f_c06cc391",
        "filename": "lib/xlat/src/xlat_tables_core.c",
        "patchSetId": 10
      },
      "lineNbr": 454,
      "author": {
        "id": 1000798
      },
      "writtenOn": "2023-07-17T19:38:43Z",
      "side": 1,
      "message": "yes I had the same understanding that it is needed for all levels, got confused with previous comments, will change.",
      "parentUuid": "0871ce5a_e5e2b0cd",
      "revId": "fefe24b8fedc264b9d40ded38fc5491df4f70379",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "053dbee7_2b222a8e",
        "filename": "lib/xlat/src/xlat_tables_core.c",
        "patchSetId": 10
      },
      "lineNbr": 454,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-07-18T05:01:09Z",
      "side": 1,
      "message": "If not RW, it can be either RO DATA or CODE. So we should check RW \u003d\u003d 0 \u0026\u0026 XN \u003d\u003d 0.\n\nSee related comment above.",
      "parentUuid": "2588486f_c06cc391",
      "revId": "fefe24b8fedc264b9d40ded38fc5491df4f70379",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0523614d_de0c820f",
        "filename": "lib/xlat/tests/xlat_tests_g2.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1705,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-07-17T15:37:21Z",
      "side": 1,
      "message": "This check is only checking for Level 3 (Page). xlat_test_helpers_gen_attrs() should cater for this case perhaps. @Javier, what is your opinion ?",
      "revId": "fefe24b8fedc264b9d40ded38fc5491df4f70379",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "896eb3a1_42db8495",
        "filename": "lib/xlat/tests/xlat_tests_g2.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1705,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-07-17T16:21:30Z",
      "side": 1,
      "message": "Yes, I agree, xlat_test_helpers_gen_attrs() needs to be updated to add the GP bit to the upper attributes when necessary. That would propagate the change to xlat_test_helpers_get_attrs_for_va() (which calls the former) and in turn it will make xlat_ctx_init_TC6() to also check that the GP bit has been setup.",
      "parentUuid": "0523614d_de0c820f",
      "revId": "fefe24b8fedc264b9d40ded38fc5491df4f70379",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2309f338_ef299133",
        "filename": "lib/xlat/tests/xlat_tests_g2.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1705,
      "author": {
        "id": 1000798
      },
      "writtenOn": "2023-07-17T19:38:43Z",
      "side": 1,
      "message": "GP bit (50) was not part of upper attr (52-63), should I add a similar utility to check GP bit separately?",
      "parentUuid": "896eb3a1_42db8495",
      "revId": "fefe24b8fedc264b9d40ded38fc5491df4f70379",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88203039_e7ad9317",
        "filename": "lib/xlat/tests/xlat_tests_g2.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1705,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2023-07-18T13:14:50Z",
      "side": 1,
      "message": "GP is part of the upper attributes as per the Arm ARM. It was never used before, so I think that is the reason why it wasn\u0027t part of the upper attr on the library. \n\nI think the same goes for the contiguous bit (bit 51), that\u0027s why the library counts the upper attributes as starting on bit 52.",
      "parentUuid": "2309f338_ef299133",
      "revId": "fefe24b8fedc264b9d40ded38fc5491df4f70379",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}