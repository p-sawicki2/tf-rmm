{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9223ef09_6739325a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-19T08:55:04Z",
      "side": 1,
      "message": "CI failures are due to static analysis failures",
      "revId": "a9f321fbcb3ca901efb75f9e682a4f2b878f8e16",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ef08d26_0f3e7ca3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-07-19T09:31:00Z",
      "side": 1,
      "message": "Looks OK. I had a doubt that how it is handled when attest_token_continue_write_state doesn\u0027t complete because the page for realm_att_token_buf is not mapped, but then I noticed that the signing is only called if `attest_data-\u003ermm_realm_token_len \u003d\u003d 0` which should be OK.\n\nI would recommend to run TFX tests as those test this scenario as well. It is probably will be necessary to update the TFX tests as well because they have assumptions on the state machine, but if we merge this change, those updates will become necessary anyway.",
      "revId": "a9f321fbcb3ca901efb75f9e682a4f2b878f8e16",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45117b49_bea6070f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-07-19T15:22:06Z",
      "side": 1,
      "message": "overall cleanup looks good to me.",
      "revId": "a9f321fbcb3ca901efb75f9e682a4f2b878f8e16",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35cee29a_228dfce5",
        "filename": "lib/attestation/src/attestation_key.c",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-07-19T09:31:00Z",
      "side": 1,
      "message": "Does this return a hash of a hash?",
      "range": {
        "startLine": 155,
        "startChar": 11,
        "endLine": 155,
        "endChar": 57
      },
      "revId": "a9f321fbcb3ca901efb75f9e682a4f2b878f8e16",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4614a225_888a041b",
        "filename": "runtime/rsi/realm_attest.c",
        "patchSetId": 3
      },
      "lineNbr": 247,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-07-19T09:31:00Z",
      "side": 1,
      "message": "this could be enclosed in parentheses as well",
      "range": {
        "startLine": 247,
        "startChar": 13,
        "endLine": 247,
        "endChar": 58
      },
      "revId": "a9f321fbcb3ca901efb75f9e682a4f2b878f8e16",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}