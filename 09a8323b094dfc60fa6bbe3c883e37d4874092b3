{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "651f1b95_1492f997",
        "filename": "lib/rmm_el3_ifc/include/rmm_el3_ifc.h",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-23T10:07:45Z",
      "side": 1,
      "message": "The errors are defined here : https://trustedfirmware-a.readthedocs.io/en/latest/components/rmm-el3-comms-spec.html#rmm-attest-get-plat-token-command\n\nE_RMM_OK can be used for Success\nE_RMM_INVAL can be sued for PLAT_TOKEN_END reached because this case is identical to `hash_size` being zero.",
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "062eff4c_e8d22730",
        "filename": "lib/rmm_el3_ifc/include/rmm_el3_ifc.h",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2024-07-24T21:38:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "651f1b95_1492f997",
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4b9c771_146eab03",
        "filename": "lib/rmm_el3_ifc/include/rmm_el3_ifc.h",
        "patchSetId": 4
      },
      "lineNbr": 310,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-23T10:07:45Z",
      "side": 1,
      "message": "`Buffer size` should be sufficient.",
      "range": {
        "startLine": 310,
        "startChar": 13,
        "endLine": 310,
        "endChar": 49
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7758d8ec_eaca82d1",
        "filename": "lib/rmm_el3_ifc/include/rmm_el3_ifc.h",
        "patchSetId": 4
      },
      "lineNbr": 310,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2024-07-24T21:38:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d4b9c771_146eab03",
      "range": {
        "startLine": 310,
        "startChar": 13,
        "endLine": 310,
        "endChar": 49
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7f80241_c8b82c60",
        "filename": "lib/rmm_el3_ifc/include/rmm_el3_ifc.h",
        "patchSetId": 4
      },
      "lineNbr": 312,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-23T10:07:45Z",
      "side": 1,
      "message": "incorrect desc (this was incorrect earlier as well).",
      "range": {
        "startLine": 311,
        "startChar": 22,
        "endLine": 312,
        "endChar": 41
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff89a3be_1fa7f755",
        "filename": "lib/rmm_el3_ifc/include/rmm_el3_ifc.h",
        "patchSetId": 4
      },
      "lineNbr": 312,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2024-07-24T21:38:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d7f80241_c8b82c60",
      "range": {
        "startLine": 311,
        "startChar": 22,
        "endLine": 312,
        "endChar": 41
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bb0782d_b1786460",
        "filename": "lib/rmm_el3_ifc/include/rmm_el3_ifc.h",
        "patchSetId": 4
      },
      "lineNbr": 319,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-23T10:07:45Z",
      "side": 1,
      "message": "\"Further calls to this API needs to have `hash_size` set to 0 to retrieve rest of the platform token\"",
      "range": {
        "startLine": 317,
        "startChar": 23,
        "endLine": 319,
        "endChar": 45
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e231337_d3ec1857",
        "filename": "lib/rmm_el3_ifc/include/rmm_el3_ifc.h",
        "patchSetId": 4
      },
      "lineNbr": 319,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2024-07-24T21:38:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1bb0782d_b1786460",
      "range": {
        "startLine": 317,
        "startChar": 23,
        "endLine": 319,
        "endChar": 45
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33b4f420_86b89d6c",
        "filename": "lib/rmm_el3_ifc/src/rmm_el3_runtime.c",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-23T10:07:45Z",
      "side": 1,
      "message": "needs to be UL I think.",
      "range": {
        "startLine": 97,
        "startChar": 22,
        "endLine": 97,
        "endChar": 23
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8a070f3_f3a935ef",
        "filename": "lib/rmm_el3_ifc/src/rmm_el3_runtime.c",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2024-07-24T21:38:43Z",
      "side": 1,
      "message": "Hmmm... not sure. Value can be either E_RMM_OK (0) or E_RMM_INVAL (-5) now. I think it is OK as it is. Please correct me if I\u0027m wrong.",
      "parentUuid": "33b4f420_86b89d6c",
      "range": {
        "startLine": 97,
        "startChar": 22,
        "endLine": 97,
        "endChar": 23
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8eaa9fe0_fb90b205",
        "filename": "lib/rmm_el3_ifc/src/rmm_el3_runtime.c",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-08-01T09:02:18Z",
      "side": 1,
      "message": "You are right on the error code. Here the smc_res.x[0] is of unsigned long type. So either you would need to typecase LHS to signed and then use 0L or if you dont care about the actual value, keep the LHS as unsigned and then use 0UL.",
      "parentUuid": "d8a070f3_f3a935ef",
      "range": {
        "startLine": 97,
        "startChar": 22,
        "endLine": 97,
        "endChar": 23
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe13c802_ae8f6e9a",
        "filename": "lib/rmm_el3_ifc/src/rmm_el3_runtime.c",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2024-08-05T17:32:59Z",
      "side": 1,
      "message": "Got it! I think that, although we don\u0027t care much about the value but we expect a signed value, it is better to typecast.",
      "parentUuid": "8eaa9fe0_fb90b205",
      "range": {
        "startLine": 97,
        "startChar": 22,
        "endLine": 97,
        "endChar": 23
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4d7c5ed_9f722743",
        "filename": "plat/host/common/src/host_harness_cmn.c",
        "patchSetId": 4
      },
      "lineNbr": 17,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-23T10:07:45Z",
      "side": 1,
      "message": "\".._HUNK_LEN\"",
      "range": {
        "startLine": 17,
        "startChar": 26,
        "endLine": 17,
        "endChar": 30
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6b422af_d02f0cbe",
        "filename": "plat/host/common/src/host_harness_cmn.c",
        "patchSetId": 4
      },
      "lineNbr": 17,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2024-07-24T21:38:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d4d7c5ed_9f722743",
      "range": {
        "startLine": 17,
        "startChar": 26,
        "endLine": 17,
        "endChar": 30
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d30bc30a_c99bea7c",
        "filename": "plat/host/common/src/host_harness_cmn.c",
        "patchSetId": 4
      },
      "lineNbr": 164,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-23T10:07:45Z",
      "side": 1,
      "message": "There are a couple of cases which need to be checked\n\n```\nif (platform_token_offset !\u003d 0) {\n    if(c_size !\u003d 0) \n\treturn E_RMM_INVAL;\n    else\n        platform_token_offset \u003d 0;\n} else {\n    if(c_size \u003d\u003d 0)\n        return E_RMM_INVAL;\n}\n\n```",
      "range": {
        "startLine": 159,
        "startChar": 1,
        "endLine": 164,
        "endChar": 2
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76465bef_b86cb745",
        "filename": "plat/host/common/src/host_harness_cmn.c",
        "patchSetId": 4
      },
      "lineNbr": 164,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-23T10:13:37Z",
      "side": 1,
      "message": "as sorry, I see what you tried to do there.\n\n```\nif (platform_token_offset \u003d\u003d 0 \u0026\u0026 c_size \u003d\u003d 0)\n    return RMM_E_INVAL;\nelse if (c_size !\u003d 0)\n    platform_token_offset \u003d 0;\n    \n```\n\nshould work ?",
      "parentUuid": "d30bc30a_c99bea7c",
      "range": {
        "startLine": 159,
        "startChar": 1,
        "endLine": 164,
        "endChar": 2
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2839036b_247873e1",
        "filename": "plat/host/common/src/host_harness_cmn.c",
        "patchSetId": 4
      },
      "lineNbr": 164,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2024-07-24T21:38:43Z",
      "side": 1,
      "message": "Hi Soby, \nI think that it would be nice to consider the possibility for the token retrieval to be reset, and therefore start getting the token from its beginning, provided that c_size !\u003d 0, and without minding where platform_token_offset points at. This means that, whether the token has been fully retrieved or not, using c_size !\u003d will reset platform_token_offset and start copying from the beginning of the token again. Therefore, there would be no need to wait for the full token to be retrieved before asking for the full token again.\n\nLet me know what you think.",
      "parentUuid": "76465bef_b86cb745",
      "range": {
        "startLine": 159,
        "startChar": 1,
        "endLine": 164,
        "endChar": 2
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a4455d0_deff8622",
        "filename": "plat/host/common/src/host_harness_cmn.c",
        "patchSetId": 4
      },
      "lineNbr": 164,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-08-01T09:02:18Z",
      "side": 1,
      "message": "Yup, this was my thinking as well and I could see that in your code. The second code snippet I suggested should have that behaviour. \n\nIt also handles the case that if platform_token_offset is 0, then having c_size \u003d\u003d 0 is an error.",
      "parentUuid": "2839036b_247873e1",
      "range": {
        "startLine": 159,
        "startChar": 1,
        "endLine": 164,
        "endChar": 2
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa297b61_fc55460f",
        "filename": "plat/host/common/src/host_harness_cmn.c",
        "patchSetId": 4
      },
      "lineNbr": 164,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2024-08-05T17:32:59Z",
      "side": 1,
      "message": "Hi Soby, \nI remember we talked offline about this last week. What comes to my mind now is the case in which you return no bytes on the first call because the HES is busy. So at least an extra call is needed with c_size \u003d 0 while platform_token_offset is still 0. It does not apply for the host harness, but just wanted to bring it up in case we want to emulate the same behavior here. Maybe we need an extra variable to account for this case.",
      "parentUuid": "5a4455d0_deff8622",
      "range": {
        "startLine": 159,
        "startChar": 1,
        "endLine": 164,
        "endChar": 2
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49a7c9f6_d9450f70",
        "filename": "plat/host/common/src/host_harness_cmn.c",
        "patchSetId": 4
      },
      "lineNbr": 164,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-09-03T16:23:42Z",
      "side": 1,
      "message": "ah, good point. In this case, because EL3 was not able to copy the SHA to HES buffer (because it was full and busy), it may be better for RMM to keep repeating the call with the hash populated in the shared buffer. This is easier to specify in the RMM-EL3 spec : Ensure hash buffer is populated (i.e c_size !\u003d0)  till the first hunk is retrieved via this API. Afterwards the c_size should be zero.\n\nwould that work ?",
      "parentUuid": "fa297b61_fc55460f",
      "range": {
        "startLine": 159,
        "startChar": 1,
        "endLine": 164,
        "endChar": 2
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4d08366_b5e2f6a9",
        "filename": "plat/host/common/src/host_harness_cmn.c",
        "patchSetId": 4
      },
      "lineNbr": 166,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-23T10:07:45Z",
      "side": 1,
      "message": "prefer to work with a local variable and finally assign to this pointer.",
      "range": {
        "startLine": 166,
        "startChar": 2,
        "endLine": 166,
        "endChar": 18
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6fde4f1_826d8151",
        "filename": "plat/host/common/src/host_harness_cmn.c",
        "patchSetId": 4
      },
      "lineNbr": 166,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2024-07-24T21:38:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c4d08366_b5e2f6a9",
      "range": {
        "startLine": 166,
        "startChar": 2,
        "endLine": 166,
        "endChar": 18
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa44e60e_50a74bea",
        "filename": "plat/host/common/src/host_harness_cmn.c",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-23T10:07:45Z",
      "side": 1,
      "message": "Maybe this can be simplified by calculating the remaining len and if remaining len is \u003c hunk_size , assign remaining len to hunk_size.",
      "range": {
        "startLine": 171,
        "startChar": 1,
        "endLine": 174,
        "endChar": 4
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80b4935d_471dd9d1",
        "filename": "plat/host/common/src/host_harness_cmn.c",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2024-07-24T21:38:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa44e60e_50a74bea",
      "range": {
        "startLine": 171,
        "startChar": 1,
        "endLine": 174,
        "endChar": 4
      },
      "revId": "09a8323b094dfc60fa6bbe3c883e37d4874092b3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}